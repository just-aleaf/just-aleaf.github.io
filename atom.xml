<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>leaf</title>
  
  
  <link href="http://just-aleaf.github.io/atom.xml" rel="self"/>
  
  <link href="http://just-aleaf.github.io/"/>
  <updated>2022-08-02T12:29:53.128Z</updated>
  <id>http://just-aleaf.github.io/</id>
  
  <author>
    <name>叶子</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>出题人挑战赛</title>
    <link href="http://just-aleaf.github.io/2022/08/02/%E5%87%BA%E9%A2%98%E4%BA%BA%E6%8C%91%E6%88%98%E8%B5%9B/"/>
    <id>http://just-aleaf.github.io/2022/08/02/%E5%87%BA%E9%A2%98%E4%BA%BA%E6%8C%91%E6%88%98%E8%B5%9B/</id>
    <published>2022-08-02T12:28:43.000Z</published>
    <updated>2022-08-02T12:29:53.128Z</updated>
    
    
    
    
    <category term="CTF" scheme="http://just-aleaf.github.io/categories/CTF/"/>
    
    
    <category term="CTF" scheme="http://just-aleaf.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Dest0g3 520迎新赛</title>
    <link href="http://just-aleaf.github.io/2022/08/01/Dest0g3%20520%E8%BF%8E%E6%96%B0%E8%B5%9B/"/>
    <id>http://just-aleaf.github.io/2022/08/01/Dest0g3%20520%E8%BF%8E%E6%96%B0%E8%B5%9B/</id>
    <published>2022-07-31T17:06:01.000Z</published>
    <updated>2022-08-02T12:21:59.790Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Dest0g3-520迎新赛"><a href="#Dest0g3-520迎新赛" class="headerlink" title="Dest0g3 520迎新赛"></a>Dest0g3 520迎新赛</h1><h2 id="1-AI"><a href="#1-AI" class="headerlink" title="1.AI"></a>1.AI</h2><h3 id="1-OCR"><a href="#1-OCR" class="headerlink" title="(1)OCR"></a>(1)OCR</h3><p>下载发现是一个凌乱的图片<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8878f02a0f.jpg" alt="QQ截图20220802100141.jpg"><br>尝试使用010 Editor（这里为什么使用该编译器，因为改编译器会提示CRC错误)</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8878f530ba.jpg" alt="QQ截图20220802100150.jpg"></p><p>这里发现CRC报错说明宽或高方面有问题<br>上网找一个脚本进行宽高的修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">import zlib</span><br><span class="line"> </span><br><span class="line">import struct</span><br><span class="line"> </span><br><span class="line">import  binascii</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">file = &#x27;flag_pic (2).png&#x27;//只需要将这里的file名改为对应文件名即可</span><br><span class="line"> </span><br><span class="line">fr = open(file,&#x27;rb&#x27;).read()</span><br><span class="line"> </span><br><span class="line">data = bytearray(fr[12:29])</span><br><span class="line"> </span><br><span class="line">crc32key = struct.unpack(&#x27;&gt;I&#x27;,fr[29:33])[0]&amp;0xffffffff</span><br><span class="line"> </span><br><span class="line">print(crc32key)</span><br><span class="line"> </span><br><span class="line">n = 4096</span><br><span class="line"> </span><br><span class="line">for w in range(n):</span><br><span class="line"> </span><br><span class="line">    width = bytearray(struct.pack(&#x27;&gt;i&#x27;, w))</span><br><span class="line"> </span><br><span class="line">    for h in range(n):</span><br><span class="line"> </span><br><span class="line">        height = bytearray(struct.pack(&#x27;&gt;i&#x27;, h))</span><br><span class="line"> </span><br><span class="line">        for x in range(4):</span><br><span class="line"> </span><br><span class="line">            data[x+4] = width[x]</span><br><span class="line"> </span><br><span class="line">            data[x+8] = height[x]</span><br><span class="line"> </span><br><span class="line">            #print(data)</span><br><span class="line"> </span><br><span class="line">        crc32result = zlib.crc32(data)</span><br><span class="line"> </span><br><span class="line">        if crc32result == crc32key:</span><br><span class="line"> </span><br><span class="line">            print(crc32key)</span><br><span class="line"> </span><br><span class="line">            print(width,height)</span><br><span class="line"> </span><br><span class="line">            print(data)</span><br><span class="line"> </span><br><span class="line">            newpic = bytearray(fr)</span><br><span class="line"> </span><br><span class="line">            for x in range(4):</span><br><span class="line"> </span><br><span class="line">                newpic[x+16] = width[x]</span><br><span class="line"> </span><br><span class="line">                newpic[x+20] = height[x]</span><br><span class="line"> </span><br><span class="line">            fw = open(file+&#x27;.png&#x27;,&#x27;wb&#x27;)</span><br><span class="line"> </span><br><span class="line">            fw.write(newpic)</span><br><span class="line"> </span><br><span class="line">            fw.close</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8878ff2719.jpg" alt="QQ截图20220802100156.jpg"><br>运行得到正常文件<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e893b9ad5a8.jpg" alt="QQ截图20220802100203.jpg"><br>这里获得的是一个图片这里就呼应了题目用到了OCR<br><a href="https://uutool.cn/ocr/">https://uutool.cn/ocr/</a><br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8939f64954.jpg" alt="QQ截图20220802100210.jpg"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">377 ABCAF271C000451FCF397500200000000000062000000000000001D9C97C8E004D002485D0022</span><br><span class="line">94A676D2FDE351A055C168F9710364AE2D581126E378F3B4C47E15E2E80B74234B849430A221F40</span><br><span class="line">C086E06B24ADAAC47F32CB62CADD154B50723E65E50CDF99CC2B953916AD2204D70C15FB493BD4C2</span><br><span class="line">E1F93902FB3563190ACEE58CC01621BB2AAAB6EED8CE892FEF5F0927E2C4BCD7C188277D09D03579</span><br><span class="line">95A2FB65D31CD99C853D7BAF52EAD8555920D1672B4A3B713917E98FB324AD225A3FA2AFAC1435FF</span><br><span class="line">E31ED0COCEFOCAOB68COCCCA81C458680D7C75139429D282984933F7ACFDFB127321D9F4EFCOFEAA</span><br><span class="line">E92F985D3C457E90AFBC4DA9D11B23E507A0953036A2EC1D75D69CD1F6A9F0790B1AB02D6C2AFFDF</span><br><span class="line">66A2E7E56A1070FBCD316813E12DF9E26FC4813D419792A65960D4D97EDFA7A978A0385C04CF36EF</span><br><span class="line">DE3B07DF9B9405253EAA838149910F2571FAA4A8E085D1567C5C17C9B3400F91FBFE6B47E052BA07</span><br><span class="line">097C9D77803D3A45E3477FE324603179C7CA6A128CDC0F7E834812618AD4C79934226637E9300C55</span><br><span class="line">95E355139A2ECF661A5F63750A6A0035ACF52417AF3A1C1FEA14471D074C27F81C719D98717F4ECD</span><br><span class="line">32918BD15C18AB93769E94DDEFD3B6FAF4DDD6628BA44BDEF574FCCD5589334EA8063D7B27A2F060</span><br><span class="line">0FC864D010A7F0CEC9B9395434878D01943887194342F9D34FC8F12DD4556ED5A5A36667F9319A03</span><br><span class="line">95DB9A445B94C44771B406F962B1CFC8535BA0D3EE3 DDDEB876C95092AAB192B168A732F3A7B9E81</span><br><span class="line">56C403C583983F5527A0D6C5D6928481D56955474046D9FC17A2DE21F3D6FC4C69644E7C6A141BE9</span><br><span class="line">48A417A33D62C6FF6DFAC702A0FC101748D9A9C64A6A0000010406000109825000070B0100012121</span><br><span class="line">01000C84D100080A0196EAFE6000000501190A000000000000000000001119004400650073007400</span><br><span class="line">3000670033002E00740078007400000019020000140A0100B547E05F6654D8011506010020000000</span><br><span class="line">000000</span><br></pre></td></tr></table></figure><p>发现对应的十六进制我们将其放入编辑器<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e893d3f274d.jpg" alt="QQ截图20220802100219.jpg"><br>发现是zip文件<br>解压即可得到一个txt文件<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e893e2530ff.jpg" alt="QQ截图20220802100225.jpg"><br>发现中间base64加密密文解密即可获得flag<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e893fea5c30.jpg" alt="QQ截图20220802100231.jpg"></p><h3 id="2-The-correct-flag"><a href="#2-The-correct-flag" class="headerlink" title="(2)The correct flag"></a>(2)The correct flag</h3><p>下载附件发现有好多看不到的数据尝试复制粘贴到记事本发现出现数据<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8941e99fdd.jpg" alt="QQ截图20220802100237.jpg"><br>然后就是词汇分析表示摆烂没搞懂</p><h2 id="2-MISC"><a href="#2-MISC" class="headerlink" title="2.MISC"></a>2.MISC</h2><h3 id="1-Pngenius"><a href="#1-Pngenius" class="headerlink" title="(1)Pngenius"></a>(1)Pngenius</h3><p>下载附件是一张照片<br>一张照片还是misc不管三七二十一先zsteg看看有没有隐写内容<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8941eda02a.jpg" alt="QQ截图20220802100244.jpg"><br>发现一个zip密码说明内藏了一个zip文件<br>所以就在使用binwalk分离一波<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8941f31424.jpg" alt="QQ截图20220802100308.jpg"><br>反手分离出来<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8941fdd917.jpg" alt="QQ截图20220802100313.jpg"><br>写入zip密码解压即可获得flag<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8942085968.jpg" alt="QQ截图20220802100318.jpg"></p><h3 id="2-EasyEncode"><a href="#2-EasyEncode" class="headerlink" title="(2)EasyEncode"></a>(2)EasyEncode</h3><p>下载附件是个zip文件解压有密码<br>先来试试伪加密防止搞半天白搞<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8942239dc1.jpg" alt="QQ截图20220802100327.jpg"><br>发现不是伪加密</p><p>那就用ziperello暴力破解一下<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c11e334.jpg" alt="QQ截图20220802100333.jpg"><br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c19a7e9.jpg" alt="QQ截图20220802100339.jpg"><br>得出密码位100861<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c31acd9.jpg" alt="QQ截图20220802100345.jpg"><br>得到一段摩斯密码解密得到十六进制数据<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e895416145d.jpg" alt="QQ截图20220802110840.jpg"><br>将内容放到编辑器查看获得unicode编码数据<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c24df79.jpg" alt="QQ截图20220802100359.jpg"><br>进行转中文<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c368353.jpg" alt="QQ截图20220802100411.jpg"><br>发现又url编码再次解码<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c3df7d7.jpg" alt="QQ截图20220802100418.jpg"><br>获得base64编码再次解码获得flag<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c4c61cd.jpg" alt="QQ截图20220802100424.jpg"></p><h3 id="3-你知道js吗"><a href="#3-你知道js吗" class="headerlink" title="(3)你知道js吗"></a>(3)你知道js吗</h3><p>下载附件习惯性查看一下16进制<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c576100.jpg" alt="QQ截图20220802100431.jpg"><br>发现xml尝试修改后缀为doc<br>打开获得一串数据<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c63b2ca.jpg" alt="QQ截图20220802100444.jpg"><br>发现是base64编码的格式<br>解码获得数据<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c8e24c0.jpg" alt="QQ截图20220802100453.jpg"><br>发现url编码特点解码<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c816605.jpg" alt="QQ截图20220802100504.jpg"><br>发现了brainfuck的特点再次解码<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c92f8b0.jpg" alt="QQ截图20220802100511.jpg"><br>获得十六进制数据放入即可获得flag<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c996a8c.jpg" alt="QQ截图20220802100516.jpg"></p><h3 id="4-StrangeTraffic"><a href="#4-StrangeTraffic" class="headerlink" title="(4)StrangeTraffic"></a>(4)StrangeTraffic</h3><p>没看懂获取tcp后的步骤之后搞懂再补充</p><h3 id="5-EasyWord"><a href="#5-EasyWord" class="headerlink" title="(5)EasyWord"></a>(5)EasyWord</h3><p>下载附件返现doc和rar多进行了加密只有hint没有加密<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e896671299b.jpg" alt="QQ截图20220802100521.jpg"><br>查看发现这提示掩码攻击<br>然后就不懂了</p><h3 id="6-Python-jail"><a href="#6-Python-jail" class="headerlink" title="(6)Python_jail"></a>(6)Python_jail</h3><p>下载附件发现有三个文件，一个内容为介绍，一个为空，一个是一个加密的zip<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e896669ecb3.jpg" alt="QQ截图20220802100529.jpg"></p><p>更具介绍和空白想到空白编码上工具<br><a href="https://vii5ard.github.io/whitespace/">https://vii5ard.github.io/whitespace/</a><br>将空白的编码输入进去进行解密<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e897d50936b.jpg" alt="QQ截图20220802100536.jpg"><br>解密获得照片</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8966871f4d.jpg" alt="QQ截图20220802100546.jpg"><br>看到照片首先想到lsb</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e896692c01f.jpg" alt="QQ截图20220802100702.jpg"><br>获得得到base64编码<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8980feeee7.jpg" alt="QQ截图20220802100709.jpg"><br>base64解码得到flag<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8982f44e10.jpg" alt="QQ截图20220802100715.jpg"></p><h3 id="7-codegame"><a href="#7-codegame" class="headerlink" title="(7)codegame"></a>(7)codegame</h3><p>下载附件名字叫zip那就尝试修改后缀为zip进行解压发现两个文件<br>查看文档发现是LOLCODE编码尝试运行<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9109587430.jpg" alt="QQ截图20220802100720.jpg"><br><a href="https://www.dcode.fr/lolcode-language">https://www.dcode.fr/lolcode-language</a><br>网站运行<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e910e78d3f5.jpg" alt="QQ截图20220802100726.jpg"></p><p>输入密码解压然后发现还有一个doc文件进去发现是空白摆烂想到题目里面zip改后缀为zip再试试<br>解压发现fllllll1ag文件打开发现是表情果断解密<br><a href="https://aghorler.github.io/emoji-aes/">https://aghorler.github.io/emoji-aes/</a><br>把解压密码带入key尝试解密发现解密不出来<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e89668128e1.jpg" alt="QQ截图20220802100739.jpg"></p><p>有解不出来摆烂摆烂摆烂然后看到advanced尝试修改发现4时解密成功<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e91101bd7cb.jpg" alt="QQ截图20220802100744.jpg"><br>解密出来16进制数据进行编译器查看<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9110ed0d00.jpg" alt="QQ截图20220802100749.jpg"></p><h3 id="被污染的二维码"><a href="#被污染的二维码" class="headerlink" title="被污染的二维码"></a>被污染的二维码</h3><p>下载附件发现时一个zip文件名的文件尝试修改后缀位zip<br>发现得到两个文件都拉进010看看十六进制<br>在这里插入图片描述<img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9112aadb23.jpg" alt="QQ截图20220802100755.jpg"></p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9112b33a68.jpg" alt="QQ截图20220802100801.jpg"><br>发现一个是png文件一个是7z文件<br>尝试将png文件进行binwalk分离<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9113f622a0.jpg" alt="QQ截图20220802100807.jpg"><br>获<img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9119587879.jpg" alt="QQ截图20220802195907.jpg"><br>再看flag2的十六进制的数据发现文件头有问题<br>正常zip的文件头为377ABCAF<br>更改另存为zip即可获取<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e91149382a4.jpg" alt="QQ截图20220802100813.jpg">)<br>使用刚才的密码即可解压获取到一串数据</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e911cc240e4.jpg" alt="QQ截图20220802100820.jpg">发现足有127列猜测是零宽<br><a href="http://330k.github.io/misc_tools/unicode_steganography.html">http://330k.github.io/misc_tools/unicode_steganography.html</a><br>网站开解<br>这里解释后要选择前三个（没有理解为什么要选前三个理解之后再回来写）<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e911e225e0f.jpg" alt="QQ截图20220802100827.jpg"><br><img src="/hello-world-1/bd8ab48bebc544b5899af2e8872ea91d.png" alt="在这里插入图片描述"><br>发下隐藏的是N-ZA-M对应想到rot13那就再去rot13一波<br><a href="http://www.mxcz.net/tools/rot13.aspx">http://www.mxcz.net/tools/rot13.aspx</a><br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e91200e446b.jpg" alt="QQ截图20220802100838.jpg"><br>一看芜湖base64来了解密解密解密<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9120cded1a.jpg" alt="QQ截图20220802100844.jpg"><br>崩了啊怎么还隐藏四位<br>只能跑回flag1的照片里面再试试修改后缀为png然后发现磨碎的二维码然后尝试修复<br><a href="https://merricx.github.io/qrazybox/">https://merricx.github.io/qrazybox/</a><br>表示对该工具不熟悉我尝试拖进去一直拖不进去没法下一步修补之后扫描即可获得中间四位得到完整二维码</p><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h3 id="phpdest"><a href="#phpdest" class="headerlink" title="phpdest"></a>phpdest</h3><p>方法一<br>进入靶机查看发现有require_once要绕过该函数（只要包含过一次便不会包含）然后读取flag4的内容<br>常见的方法就想到了伪协议和多级符号链接的方法结合绕过<br>这里就要了解&#x2F;proc&#x2F;self和&#x2F;proc&#x2F;self&#x2F;root的含义<br>&#x2F;proc&#x2F;self&#x2F;指当前进程，而&#x2F;proc&#x2F;self&#x2F;root&#x2F;指’’&#x2F;‘’<br>这里如果我们知识使用一些proc&#x2F;self&#x2F;root的话最后也会被转化变为正确的路径导致无法绕过，但凡事都有一个上限当我们超过他所能接受的上限就可以导致其无法识别进而无法转换达到绕过的效果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=php://filter/convert.base64-encode/resource=/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/var/www/html/flag.php</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9129fca893.jpg" alt="QQ截图20220802200234.jpg"><br>进行base64转换即可获取到flag</p><h3 id="EasyPHP"><a href="#EasyPHP" class="headerlink" title="EasyPHP"></a>EasyPHP</h3><p>下载靶机发现没什么思路那就代码分析一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlight_file(__FILE__);  //提高亮度没什么用</span><br><span class="line">include &quot;fl4g.php&quot;;</span><br><span class="line">$dest0g3 = $_POST[&#x27;ctf&#x27;];//post传入擦书</span><br><span class="line">$time = date(&quot;H&quot;);//设置时间参数</span><br><span class="line">$timme = date(&quot;d&quot;);</span><br><span class="line">$timmme = date(&quot;i&quot;);</span><br><span class="line">if(($time &gt; &quot;24&quot;) or ($timme &gt; &quot;31&quot;) or ($timmme &gt; &quot;60&quot;))&#123;//条件判断时间超过24小时或者超过31天或者超过60s都是无法实现的</span><br><span class="line">    echo $fl4g;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &quot;Try harder!&quot;;</span><br><span class="line">&#125;</span><br><span class="line">set_error_handler(//该函数用我的理解就是自己设置报错方式</span><br><span class="line">    function() use(&amp;$fl4g) &#123;</span><br><span class="line">        print $fl4g;</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line">$fl4g .= $dest0g3;</span><br><span class="line">?&gt; Try harder!</span><br></pre></td></tr></table></figure><p>由于上面if语句根本不可能实现<br>所以我们就要尝试利用函数set_error_hander进行报错输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctf[]=123</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e912a125436.jpg" alt="QQ截图20220802200258.jpg"></p><h3 id="SimpleRCE"><a href="#SimpleRCE" class="headerlink" title="SimpleRCE"></a>SimpleRCE</h3><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e912f903436.jpg" alt="QQ截图20220802200504.jpg"><br>一进去就看到一堆过滤词汇直接奔溃<br>然后看代码发现str_replace函数一般该函数都是用hex2bin()进行绕过同时发现’()‘和单引号没有过滤那就肯定了这一做法<br>hex2bin的用法大家可以自行百度<br>然后绕过机制就为post传入aaa&#x3D;hex2bin(‘73797374656d’)(hex2bin(‘636174202f666c6167’));&#x2F;&#x2F;system(cat &#x2F;flag)<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e912a1b86a1.jpg" alt="QQ截图20220802200308.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Dest0g3-520迎新赛&quot;&gt;&lt;a href=&quot;#Dest0g3-520迎新赛&quot; class=&quot;headerlink&quot; title=&quot;Dest0g3 520迎新赛&quot;&gt;&lt;/a&gt;Dest0g3 520迎新赛&lt;/h1&gt;&lt;h2 id=&quot;1-AI&quot;&gt;&lt;a href=&quot;#1</summary>
      
    
    
    
    <category term="CTF" scheme="http://just-aleaf.github.io/categories/CTF/"/>
    
    
    <category term="CTF" scheme="http://just-aleaf.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://just-aleaf.github.io/2022/08/01/hello-world/"/>
    <id>http://just-aleaf.github.io/2022/08/01/hello-world/</id>
    <published>2022-07-31T17:02:01.949Z</published>
    <updated>2022-07-31T17:02:01.949Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
